
//====================================================================  算法图解
//====================================================================  算法图解

//====================================================================  虚拟机
//====================================================================  虚拟机

//====================================================================  领域模型
//====================================================================  领域模型


外键小技巧：
	（1）系统数据加外键
	（2）业务数据不加外键

//==================================================================== 使用注意事项
//==================================================================== 使用注意事项


（1）SQL解析时，带不带 `` 都能解析，
		但是，如果SQL里面出来了关键字，就必须加``了。


（2）update 和 delete 相关校验，内部会自动开启验证，就是表必须存在
		//因为它内部要转换计算，必须开启验证才能转换成功
		//所以关闭验证只对 update 和 delete 有效果


（3）测试连通性时：
		ORACLE必须传     "serviceName": "test2" 字段


（4）审核时：
		1. mysql        时 dbNameOrSchema 字段 "不传" 或 "传正确"
		1. oracle       时 dbNameOrSchema 字段 "（必传）传正确"
		3. td-sql       时 dbNameOrSchema 字段 "不传" 或 "传正确"
		4. dm           时 dbNameOrSchema 字段 "不传" 或 "传正确"
		5. ob-mysql     时 dbNameOrSchema 字段 "不传" 或 "传正确"
		6. ob-oracle     时 dbNameOrSchema 字段 "不传" 或 "传正确"


（5）创建表时必须有id
		(?i)^id$


（6）字段命名
		^[A-Za-z_]+$


（7）禁止值
		(?i)liheng
		136[0-9]{8}


（8）工单执行时
		（1）DM的SQL必须 指定schema

（9）具有 "SQL审核" 权限的用户
		用户1: user/123456
		用户2: user1/123456
		用户3: user2/123456

（10）工单执行接口
		验证：tdsql 怎么指定 dbname 和 执行sql测试



		feat(core):   修复BUG
		fix(login):   修复BUG
		docs(toggle): 修复BUG



//==================================================================== 当前版本
//==================================================================== 当前版本

//==================================================================== 主要做大的需求
//==================================================================== 主要做大的需求

//==================================================================== 暂停
//==================================================================== 暂停


重庆的版本





//====================================================================

//=========================== 贵阳出差
//=========================== 贵阳出差
（1）基本功能验证
	  //哪些项要添加进去，提供出来一下。
（2）出包
（3）部署


//==================================================================== 2.0 开发
//==================================================================== 2.0 开发

（1）前端：编辑通过  + 开关。
		（1）通过级联来配置吧
（2）对象那里要能展示出，
		//明天继续往后

//=========================== 开发
//=========================== 开发

（1）快速审核，等这边全部完成了，再修改
（2）（新需求）网络设备
（3）（新需求）以 "组为单位" 进行审核开发

//==================================================================== 优化
//==================================================================== 优化



（1）优化：基线 "规则" 的基线要求用子表格展示出来。
		   //而且可以直接编辑，这个我来改

（1）需求：通过堡垒机连接 //堡垒机
（2）需求：配置或输入要支持用户密码或密钥//添加密钥支持
（3）优化：报告里面需要：优化建议
	 // 报告中加入建议？看客户是否需要

（4）基线详情展示优化
		 //（1）linx - 004 脚本拆分到多个规则（让界面布局更友好）
		 //（2）windows -  脚本拆分到多个规则（让界面布局更友好）
		 // 让窗口可以滚动


		 //==================================================================== 其它想法
		 //==================================================================== 其它想法
		（5）报告有历史记录，可以查询历史的报告
				//条件很灵活，需要可以随时生成
		（6）根据任务生成报告
				//没有这个功能，可以根据任务去生成任务的报告
		（7）出报告时：批量选择 "目标对象" 生成一个报告
			   //或者：任务需要有 “任务组” 的管理维度，
			   //生成报告时，选择一个 “任务组” 全部一起生成报告
		（8） 历史数据保留30天
				//（1）守护线程去删除？
				//（2）但是要考虑数据之间的关联
		（9）动态审核、静态审核也加入并发优化
				//（1）通用的对象
				//（2）命名不要冲突
		（10）性能优化：主要是数据库性能
				//先分析哪张表可能数据最多
				//先加索引
 





//=========================================
//=========================================
（1）扩展解析器
		（1）javacc 学习一下
			 //（1）先做一个Demo
			 //（2）视频学习语法
			 https://www.bilibili.com/video/BV1ogiAeJEwH?spm_id_from=333.788.videopod.sections
			 https://www.bilibili.com/video/BV1griwe3EYv?spm_id_from=333.788.videopod.sections
			 https://www.bilibili.com/video/BV1JpiwepE7Z?spm_id_from=333.788.videopod.sections

		（2）扩展参考：
			 calcite-calcite- 1.39.0 源码

		（3） 扩展示例Demo

		（4） javacc
			（1）日志解析这个解析不出来 for update
				 //暂时屏蔽，等待回答
			（2）SQL中没有 `` 有些解析不了
					//以后扩展解析
			（3）sql中有注释也可能解析不了
					//以后扩展解析器

//========================================= 其它
//========================================= 其它
（1）优化
	（1）并发审核优化
		（1）要么并发
		（2）要么用队列解耦	
	（2）大量数据的优化
		//分表
		//`task_result``task_result_sql`
		//`audit_result``audit_result_violations`
	（3）添加索引
	（4）任务列表中的 "执行中" 需要时实显示？
	（5）看板里面的功能要实时显示

不是真得上传

//=========================================
//=========================================




 