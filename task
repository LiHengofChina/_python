
//=========================================  算法图解
//=========================================  算法图解

//========================================= 使用注意事项
//========================================= 使用注意事项

（1）SQL解析时，带不带 `` 都能解析，
		但是，如果SQL里面出来了关键字，就必须加``了。

（2）update 和 delete 相关校验，内部会自动开启验证，就是表必须存在
		//因为它内部要转换计算，必须开启验证才能转换成功
		//所以关闭验证只对 update 和 delete 有效果

（3）测试连通性时：
		ORACLE必须传     "serviceName": "test2" 字段

（4）审核时：
	 1. mysql  时 dbNameOrSchema 字段 "不传" 或 "传正确"
	 1. oracle 时 dbNameOrSchema 字段 "（必传）传正确"
	 3. td-sql 时 dbNameOrSchema 字段 "不传" 或 "传正确"
	 4. dm     时 dbNameOrSchema 字段 "不传" 或 "传正确"

//=================================================================== （1）下周一：信息同步
//=================================================================== （1）下周一：信息同步

（1）同步信息
	（1）增加了 "暂停任务" 接口	
			示例：http://localhost:8082/api/v1/sqlaudit/tasks/pauseTask/tdsql_task_17_24_08_588
	（2）增加了 "恢复任务" 接口
			示例：http://localhost:8082/api/v1/sqlaudit/tasks/resumeTask/tdsql_task_17_24_08_588
	（3）详情增加一个，触发器状态。
			"triggerStatus": "正常" //直接展示即可
	（4）列表增加一个，触发器状态。
			"triggerStatus": "正常" //直接展示即可
	（5）数据源列表
				（1）"所属资源组名称" 列 放到最第1列
				（2）"所属资源组名称" 列改名为 "资源组"
	（6）资源组
				（3）添加 资源组 时 ， "资源组描述" 需要添加红色*号。
	（7）ORACLE 和 DM 在添加任务时 ，machineInfos 传 [] 就行
	     //任务结果中会自动设置 "机器的IP"
		 //意思是 ORACLE 和 DM  不需要填机器信息
	（8）SQL上线：
			（1）“违反规则详细列表” 中有个 “SQL类型” 字段不要显示
			（2）点击 "SQL格式化" 之后，不要有那个 “操作成功的弹窗提示”
	（9）任务管理 ：
			"执行结果" -> "详情列表"，->展示的字段中
			（1）不要显示 "数据源名称"，//因为这里都是针对的同一个 "数据源"
			（2）"审核结果状态" 里面有个3，表示的是: "解析SQL失败"
			（3）添加任务的时候，应该先选 "资源组"，再选 "数据源"
				 //表示：选择 "某个资源组" 的数据源


//=================================================================== 自定义审核规则的实现
//=================================================================== 自定义审核规则的实现



（1）自定义审核规则

（2）自定义 shell


//=================================================================== 自定义审核规则
//=================================================================== 自定义审核规则

（1）角色管理：
		//和主系统结合起来

（2）审批流配置
		//选择审批组、审批人、

（3）工单管理
		//提交之后产生工单
		（1）工单列表
		（2）

（4）进入审批流程
	（1）通知功能
	（2）查看消息
	（4）审批"工单"


（5）sql执行操作
	（1）执行工单中的SQL
			//执行操作是不能是查询类型的



（4）执行操作

	（1）部署到一台服务器上面去
		 //通过网关调用接口
	（2）人工审核流程图
	（3）自动审核流程图
	（4）编写使用文档
	（5）分类里面加一个其它
			 //这样不确定都分在里面
	（6）在保存模板时，要检测，有些规则是冲突的。
		 这里看看有没有什么算法，巧妙设计
		 有些审核规则相互冲突的，不能同时生效，
		 所以它们要分开存放在不同的“审核模板”中


//=========================================
//=========================================

（5）完成 剩余的规则90+

	注意分类  
	 （1）有些是审核规则
	 （2）有些是检测项
		   //要运行任务才能做出来的
			：记录数>1000W的表使用分区
	  （3）有些功能是静态实现，
		   有些功能是动态实现的。

（7）统计报表
（7）优化



//========================================= 审批流程配置
//========================================= 审批流程配置



		 //==========================DM（3）
		（4）有些是检查项，自动任务才能做的。
				 //加一个两个新的字段，
				 //就是标识这个规则是
						：自动任务 可用
						：工单上线 可用

（5） 结果汇总：收集所有规则的审核状态，生成审核报告。
			//什么是报告呢？怎么算报告呢

（6）另外 "工单" 有一个外键来 指向 "审核结果"

（7）自动任务中需采集
	  只有自动任务才会去采集日志

（3）有些审核要连接数据库，有些不需要


//========================================= 剩余的规则
//========================================= 剩余的规则
（1）审核参数初始脚本清理

（2）报表展示

（3）仪表盘

（4）工单那里有一个审核结果列表


（5）提高审核效率：
		（1）要么并发
		（2）要么用队列解耦

//========================================= 扩展解析器
//========================================= 扩展解析器

（1）并发审核优化

（2）日志解析这个解析不出来 for update
	 //暂时屏蔽，等待回答

（3）SQL中没有 `` 有些解析不了
		//以后扩展解析
（4）sql中有注释也可能解析不了
		//以后扩展解析器

（5）分表
	`task_result``task_result_sql`

	`audit_result``audit_result_violations`

    添加索引
    增加分表分分库功能




