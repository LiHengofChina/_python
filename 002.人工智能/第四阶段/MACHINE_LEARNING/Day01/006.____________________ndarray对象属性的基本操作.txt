
//================================================================= np.ndarray.shape
//================================================================= np.ndarray.shape

//====================== 查看数组的维度
//====================== 查看数组的维度

#查看数组的维度
print(ary.shape)  # (8,)，查看它是几维数组

//====================== 修改数组的维度
//====================== 修改数组的维度

直接修改数组的 "shape属性" 就可以修改它的维度
	//变换前的  "元素个数"  和变换后的  "元素个数"  要相等
ary.shape = (4, 2)
print(ary)

	#人工智能里面一般最高接触到4维数据
	因为一张 "彩色图像" 是3维数据，N张彩色图像就是N个3维，就是4维数据

//================================================================= np.ndarray.dtype
//================================================================= np.ndarray.dtype

//====================== 查看元素类型
//====================== 查看元素类型
ary = np.arange(1,10)
print(ary)

//====================== 修改元素类型
//====================== 修改元素类型

print("==" * 20)
print(type(ary), ary, ary.dtype)
# ary.dtype = 'float32'  #这种方式，只是暴力修改了它的解析方式
liheng = ary.astype('float64')  # 不能修改原来数组，所以要一个变量接收
print(type(liheng), liheng, liheng.dtype)


//================================================================= 元素个数 size  ，长度len
//================================================================= 元素个数 size  ，长度len

print("==" * 20)
ary = np.arange(1, 10)
print(ary)
print(ary.size)  # 9 ，打印元素个数

print("==" * 20)
ary.shape = (3, 3) #修改形状之后，再次打印元素个数，还是为9，所以size不管是几维，它都查看的是所有的它有几个元素
print(ary)
print(ary.size)




