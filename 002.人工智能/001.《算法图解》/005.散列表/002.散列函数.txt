

//================================================================================================
//================================================================================================

"散列函数" 是这样的函数，即无论你："给它什么数据，它都还你一个数字。"

	如：

	namaste ===> 7
	hola 	===> 4
	Hello   ===> 2

	//专业术语来表达
	散列函数 "将输入映射到数字" 。

	//======================== 散列函数必须满足一些要求。
	//======================== 散列函数必须满足一些要求。
	（1）它必须是一致的。
		/**
			例如，假设你输入 apple 时得到的是 4 ，
			那么每次输入 apple 时，得到的都必须为4。
		*/
		
	（2）它应将不同的输入映射到不同的数字
		/**
			例如，如果一个散列函数不管输入是什么都返回 1，
			它就不是好的散列函数最理想的情况是，将不同的输入映射到不同的数字。
		*/			
		
	//======================== 
	//======================== 
	
	散列函数准确地指出了价格的存储位置，
		你根本"不用查找"！之所以能够这样，具体原因如下。
	（1）散列函数总是将同样的输入映射到相同的索引。
	（2）散列函数将不同的输入映射到不同的索引。
	（3）散列函数知道数组有多大，只返回有效的索引。

//==============================================
//==============================================
	
	你结合使用 "散列函数" 和 "数组" 创建了一种被称为 "散列表（hash table）" 的数据结构。
			/**
				简单说：
						散列函数 + 数组 = 散列函数
			*/

	"散列表" 是你学习的 "第一种包含额外逻辑" 的数据结构。
			//注意：是额外的逻辑。

			/**
				"数组和链表" 都被直接映射到内存，
				但散列表更复杂，它使用 "散列函数" 来确定 "元素的存储位置"。
			*/

	//======================== 别名
	//======================== 别名
	复杂数据结构中"散列表" 可能是最有用的	
	也被称为 "散列映射、映射、字典和关联数组" 。
	
	//======================== 散列表的速度
	//======================== 散列表的速度

	散列表的速度很快！
	你可以立即获取数组中的元素，
	而 "散列表" 也使用 "数组来存储数据" ，因此 "其获取元素的速度" 与 数组一样快。
 

//==============================================
//==============================================


	******************************************************************************
	你可能根本 "不需要" 自己去 "实现散列表"，任一优秀的语言都提供了 "散列表实现" 。
	******************************************************************************


	//=====================
	Python 提供的散列表实现为 字典，你可使用函数 dict 来创建散列表。
	
	book = dict()

	创建散列表 book 后，在其中添加一些商品的价格。

	>>> book[" apple "] = 0.67  ←------一个苹果的价格为67美分
	>>> book["milk"] = 1.49  ←------牛奶的价格为1.49美元
	>>> book["avocado"] = 1.49
	>>> print book
	{'avocado': 1.49, ' apple ': 0.67, 'milk': 1.49}


	非常简单！我们来查询鳄梨的价格。

	>>> print book["avocado"]
	1.49  ←------鳄梨的价格

	散列表由 "键和值" 组成。
	在前面的散列表 book 中，键为商品名，
	值为商品价格。散列表将 "键映射到值" 。

 