//===========================================
//===========================================
https://blog.csdn.net/e891377/article/details/99635372

java-数据结构-大顶堆和小顶堆


堆通常是一个可以被看做一棵树的数组对象

PriorityQueue 
	本身的逻辑结构是一棵完全二叉树，而它的存储结构是一个数组。
	因为完全二叉树层次遍历的结果刚好是一个数组。	
	
//PS:就是说完全 的二叉树，可以和数组相互转换

//===========================================概念：堆排序
//===========================================概念：堆排序
1). 堆排序是利用堆这种数据结构而设计的一种排序算法，堆排序是一种选择排序，它的最坏，最好，
	平均时间复杂度均为O(nlogn)，
	它也是不稳定排序。
	
2). 堆是具有以下性质的完全二叉树：
	
	
	每个结点的值都大于或等于其左右孩子结点的值，称为 大顶堆。
		//注意 : 没有要求结点的左孩子的值和右孩子的值的大小关系。

	每个结点的值都小于或等于其左右孩子结点的值，称为 小顶堆。


	
//================大顶堆
//================大顶堆

大顶堆特点：arr[i] >= arr[2*i+1] && arr[i] >= arr[2*i+2] 
	// i 对应第几个节点，i从0开始编号
//================小顶堆
//================小顶堆

小顶堆：arr[i] <= arr[2*i+1] && arr[i] <= arr[2*i+2] 
	// i 对应第几个节点，i从0开始编号

//=========================================== 堆排序基本思想
//=========================================== 堆排序基本思想
//PS: 一般升序采用大顶堆，降序采用小顶堆	

堆排序的基本思想是：

1). 将待排序序列构造成一个大顶堆
2). 此时，整个序列的最大值就是堆顶的根节点。
3). 将其与末尾元素进行交换，此时末尾就为最大值。
4). 然后将剩余 n-1 个元素重新构造成一个堆，
	这样会得到n个元素的次小值。如此反复执行，便能得到一个有序序列了。
	





