
'''
多维数组的切片
'''

import numpy as np

ary = np.arange(1, 51).reshape(10, 5)
print(ary)


print("==" * 20)
#第0行的前2列
print(ary[:1, :2])  #行和列都通过切片拿

print(ary[0][0:2])  #行是索引，列是切片，
print(ary[0, :2])   #行是索引，列是切片，

#数组：切片切出来的是2维的，索引拿到的都是1维的

#对于列表：切出来的都是列表
#切片，切出来的是当前元素的某一段，所以元素类型不会变，列表出来的是列表，字符串切出来的是字符串
#所以数组切出来的还是数组
#一维数组 切出来是一维数组
#二维数组 切出来是二维数组
#就是说切片是不会降维的

#而索引，通过索引拿到的是二维数组的第0行，而第0行是一个一维数组，再对它进行切片，它就会变成1维数组
#结论就是切片不会降维，而索引会降维

print(ary[0, 1])  # 0是拿到第一行，而1是它的第二个元素，从二维降到一维，再从一维降到元素，所以拿到的是字符串
print(ary.dtype)  # 0是拿到第一行，而1是它的第二个元素，从二维降到一维，再从一维降到元素，所以拿到的是int32型数字

#拿到结果可能一样，便是维度是不一样的，所以需要注意
#因为，有时候，我们对数据是有要求的，有时候，需要一维，有时候需要二维