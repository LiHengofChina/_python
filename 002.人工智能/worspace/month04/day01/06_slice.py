


import numpy as np



a = np.arange(1,10)
print(a)  # 1 2 3 4 5 6 7 8 9
print("==" * 20)

# 正向切面，从左往右切。
print(a[:3])  # 从0开始到3不包括3，就是[0] [1] [2] 脚标的值， 1 2 3
print(a[3:6]) # 从3到6不包括6，就是[3] [4] [5] 脚标的值，4 5 6
print(a[6:])  # 从6到结尾，就 [6] [7] [8] 脚标的值，7 8 9
print("==" * 20)


# 反向切面（由步长决定，步长为负数），从右往左切，
print(a[::-1])   	# 开始和结束都省略，且步长为负数 -1 ， 9 8 7 6 5 4 3 2 1
print(a[:-4:-1]) 	# 从0开始（这里好像是-1 ）切到-4不包括-4 ，步长为-1，-4是反向索引 ，[-1][-2][-3] 也就是 9 8 7
print(a[-4:-7:-1])  # 从 -4 开始 切到-7 不包括-7 ，步长为-1，[-4] [-5] [-6] 也就是 6 5 4
print(a[-7::-1]) 	# 从 -7 开始到最后，步长为-1，反向切，[-7] [-8] [-9] ，也就是 3 2 1
print("==" * 20)

print(a[::])		# 开始到结束， [0] [1] [2] [3] [4] [5] [6] [7] [8]的值，也就是1 2 3 4 5 6 7 8 9
print(a[:])			# 开始到结束， [0] [1] [2] [3] [4] [5] [6] [7] [8]的值，也就是1 2 3 4 5 6 7 8 9
print("==" * 20)

print(a[::3])		# 开始到结束，步长3 [0] [3] [6] 的值，也就是1 4 7
print(a[1::3])		# 从1到结束，步长3 [1] [4] [7] 的值，也就是2 5 8
print(a[2::3])		# 从2到结束，步长3 [2] [5] [8] 的值，也就是3 6 9

