
//====================================================================== 相机要求
//====================================================================== 相机要求

//======================= （1）采样阶段 
//======================= （1）采样阶段 

1） 高倍放大镜 和 相机结合 ，保证原始图像捕获更多的细节，能达到 "微米级" 细微程序。

	1. 高倍放大镜和相机结合：确保设备能够捕获高分辨率和高质量的图像。
	2. 准备有瑕疵的目标样板：模型更好地学习和泛化，越多越好，瑕疵类型 * 10 。
	3. 稳定光源：样本拍摄 和识别时，使用相同的光源。

2） 准备 "有瑕疵的目标样板"   
	//样本越多越好，类型、大小、形状上具有多样性。
	//增加样本数量。有助于模型更好地学习和泛化。


3） 将样板放置在有背景色差的平台上面，
	进行拍摄样本。//越多越好

//======================= （2）图片预备处理阶段
//======================= （2）图片预备处理阶段

1） 通过opencv技术把背景平台去掉，只 "笔记本外壳" 内的像素值。
2） 然后扶正。
3） 切割图片。
	//减少背景噪声和提高模型准确性非常重要
	//虑模型的输入要求和细节保留的需求。
	//将图片成，切割成400*400 或者600*600左右的图像，以模型为准，方便训练

//=======================（3）标注
//=======================（3）标注

1） 对有瑕疵的图片进行缺陷标注，
2） 分类放置，缺陷分类：
			划痕
			凹陷
			色差
			气泡

//=======================（4）编写代码：模型选择YOLO3
//=======================（4）编写代码：模型选择YOLO3

0） YOLO3
		//Faster R-CNN 或 SSD



1） 编写代码。
2） 训练模型，观察损失函数、权重、偏置、超参数

//=======================（5）编写代码：识别
//=======================（5）编写代码：识别

1） 拍摄图片，
2） 切割图片，让模型进行预测，
    在识别时，要进行 和预处理相同的步骤进行预处理



//=======================（6）部署贾实施
//=======================（6）部署贾实施

1） 相机代码编写
2） 与其它系统的交互与通信，C和C++
3） 整体部署方案






 