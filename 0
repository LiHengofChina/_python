#include <iostream>
#include <winsock2.h>
#include <ws2tcpip.h>
#pragma comment(lib, "ws2_32.lib")

/***
 * Windows版本TCP服务端
 * @return
 */
int main() {

    ///（1）初始化Ws2_32.dll动态链接库
    WSADATA wsaData;
    if (WSAStartup(MAKEWORD(2, 2), &wsaData) != 0) {
        std::cerr << "WSAStartup failed\n";
        return 1;
    }

    ///（2）创建 "服务器端的套接字"
    SOCKET serverSocket = socket(AF_INET, SOCK_STREAM, 0);
    if (serverSocket == INVALID_SOCKET) {
        std::cerr << "Failed to create socket\n";
        WSACleanup();
        return 1;
    }


    ///（3）将 "服务端的套接字"  绑定到  “特定的IP地址和端口”
    sockaddr_in serverAddress;
    serverAddress.sin_family = AF_INET;
    serverAddress.sin_addr.s_addr = INADDR_ANY; // 使用任意可用的IP地址
    serverAddress.sin_port = htons(8888); // 使用端口8888
    //绑定
    if (bind(serverSocket, (struct sockaddr*)&serverAddress, sizeof(serverAddress)) == SOCKET_ERROR) {
        std::cerr << "Binding failed\n";
        closesocket(serverSocket);
        WSACleanup();
        return 1;
    }

    ///（4）将"服务端的套接字"设置为"监听模式"
    if (listen(serverSocket, 5) == SOCKET_ERROR) {
        std::cerr << "Listening failed\n";
        closesocket(serverSocket);
        WSACleanup();
        return 1;
    }
    std::cout << "Server started. Listening for incoming connections...\n";

    /// （5） 接受客户端连接
    sockaddr_in clientAddress;
    int clientAddressSize = sizeof(clientAddress);
    SOCKET clientSocket = accept(serverSocket, (struct sockaddr*)&clientAddress, &clientAddressSize);
    if (clientSocket == INVALID_SOCKET) {
        std::cerr << "Accepting client connection failed\n";
        closesocket(serverSocket);
        WSACleanup();
        return 1;
    }

    char buffer[1024];
    while (true) {
        // 接收客户端消息
        int bytesReceived = recv(clientSocket, buffer, sizeof(buffer), 0);
        if (bytesReceived == SOCKET_ERROR) {
            std::cerr << "Receiving data failed\n";
            break;
        }

        if (bytesReceived == 0) {
            std::cout << "Client disconnected\n";
            break;
        }

        // 将收到的消息回传给客户端
        send(clientSocket, buffer, bytesReceived, 0);
    }

    // 关闭套接字
    closesocket(clientSocket);
    closesocket(serverSocket);
    WSACleanup();

    return 0;
}
