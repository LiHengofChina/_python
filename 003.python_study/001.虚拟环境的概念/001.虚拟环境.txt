

"虚拟环境" 是一个 "独立的 Python 环境"，
	能够在不影响系统全局 Python 设置的情况下，
	管理特定项目的 "依赖库和解释器"。
	它是 Python 开发中的一个常用概念，尤其在处理多个项目时，
	虚拟环境可以帮助你为每个项目创建隔离的运行环境，
	从而避免不同项目之间的依赖冲突。


//================ 虚拟环境的作用：
//================ 虚拟环境的作用：
（1）离依赖：
（2）防止系统污染：
（3）更容易管理项目依赖：




//================ 总结：
//================ 总结：
虚拟环境 是为了隔离和管理 Python 项目依赖而创建的独立环境。它可以帮助你避免不同项目之间的库冲突。
即使你现在没有运行虚拟环境，它的创建步骤仍然是必要的，以确保你的项目有一个干净的、隔离的依赖环境。
在 PyCharm 中，你可以选择使用虚拟环境作为项目的解释器，并且在虚拟环境中安装和管理项目所需的库。