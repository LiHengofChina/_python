
//============================================== 词条和
//============================================== 词条和
 
在同一个配置文件里，不仅可以放布尔开关或功能列表，还能添加不同版本或不同语言的词条，

{
  "featureFlags": {
    "showNewBanner": true
  },
  "titles": {
    "v1": {
      "home": "首页",
      "dashboard": "仪表盘"
    },
    "v2": {
      "home": "Home",
      "dashboard": "Dashboard"
    }
  },
  "i18n": {
    "en": {
      "welcome": "Welcome"
    },
    "zh": {
      "welcome": "欢迎"
    }
  }
}

//============================================== "不同词条显示 " 和 "不同语言显示" 是不是一回事啊，就是"编译时动态指定显示的样子"
//============================================== "不同词条显示 " 和 "不同语言显示" 是不是一回事啊，就是"编译时动态指定显示的样子"

不完全是一回事。
	（1）"不同词条显示" 多用于版本、功能模块或页面文案的差异，
			比如 v1 版和 v2 版标题不一样，这属于功能/版本控制范畴；
			//不同的环境，和厂家
	（2）"不同语言显示" 则是针对国际化（i18n），根据用户选择或浏览器语言来切换文案。


//============================================== "不同显示词条"是在打包时确定的，然后死码消除，而 “i18n” 对应的内容会一直存在
//============================================== "不同显示词条"是在打包时确定的，然后死码消除，而 “i18n” 对应的内容会一直存在
编译时 "指定的词条" 会跟随开关一起被打包进产物，然后未用到的分支会被 "死码消除" ；

而 i18n 资源通常是 "所有语言都打包进来" ，
根据运行时环境或用户选择再动态切换，所以不会像编译时词条那样被剔除。


//============================================== "词条" 和 "开关功能" 都是与 “版本或环境 ” 一一对应，而i18n是和支持的语言一对对应
//============================================== "词条" 和 "开关功能" 都是与 “版本或环境 ” 一一对应，而i18n是和支持的语言一对对应
"词条" 或 "开关功能" 通常是针对 "不同版本或环境（如开发、测试、生产）" 来配置的，
编译时注入后会根据环境生成不同的打包结果。

而 i18n 是针对不同语言来维护的资源，运行时根据用户选用语言动态加载，不会被死码消除

//============================================== 另一个 "皮肤和主题"又是和 国际化 、词条不相同， 皮肤和主题是与 "国际化"类似的另一个维度对吗
//============================================== 另一个 "皮肤和主题"又是和 国际化 、词条不相同， 皮肤和主题是与 "国际化"类似的另一个维度对吗

皮肤/主题也是一个“维度”，类似于国际化，但它控制的是界面样式（配色、布局等），而不是文本内容。

//============================================== "词条 和 功能开关"
//============================================== "词条 和 功能开关"

从 "版本/环境" 维度来看，词条（不同版本文案）和功能开关（不同版本功能）都属于同一维度的配置，
都可以放在同一个配置文件里、同一套打包逻辑中处理。


