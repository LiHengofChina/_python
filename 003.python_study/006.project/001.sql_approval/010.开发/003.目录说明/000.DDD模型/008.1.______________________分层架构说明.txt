

（1）用户接口层（interfaces）：
		面向 "前端" 提供服务适配，面向资源层提供资源适配。
		这一层聚集了接口适配相关的功能。

		它主要存放 "用户接口层" 与 "前端交互"、"展现数据" 相关的代码。
		"前端应用" 通过 "这一层的接口"，向 "应用服务" 获取 "展现所需的数据"。

		这一层主要用来处理 "用户发送的Restful请求"，

		解析用户输入的 "配置文件"，
		并将 "数据" 传递给Application层。
		 "数据的组装"、"数据传输格式"以及 "Facade 接口"等代码都会放在这一层目录里。


（2）应用层职责（application）：实现服务 "组合" 和 "编排"，
	  适应 "业务流程" 快速变化的需求。
	  这一层聚集了 "应用服务" 和 "事件相关"的功能。

	  它主要存放 "应用层服务组合" 和 "编排" 相关的代码。
	  "应用服务" 向下基于 "微服务内的领域服务" 或 "外部微服务的应用服务" 完成
	  服务的 "编排和组合"，
	  向上为 "用户接口层" 提供 "各种应用数据展现支持服务"。
	  应用服务和事件等代码会放在这一层目录里。


（3）领域层（domain）：实现领域的核心业务逻辑。
		这一层聚集了领域模型的聚合、聚合根、实体、值对象、领域服务和事件等领域对象，
		以及它们组合所形成的业务能力。

		它主要存放 "领域层核心业务逻辑" 相关的代码。
		领域层可以包含 "多个聚合代码" 包，它们共同实现 "领域模型" 的 "核心业务逻辑"。
		聚合以及聚合内的 "实体"、"方法"、领域服务和事件等代码会放在这一层目录里。

（4） 基础层（infrastructure）：贯穿所有层，为各层提供 "基础资源服务"。
	 这一层聚集了各种底层资源相关的服务和能力。

	 它主要存放基础资源服务相关的代码，为其它各层提供的通用技术能力、三方软件包、数据库服务、
	 配置和基础资源服务的代码都会放在这一层目录里。


