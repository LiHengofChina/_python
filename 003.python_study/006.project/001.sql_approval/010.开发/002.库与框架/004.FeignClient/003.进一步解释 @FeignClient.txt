
//============================== （1）. @FeignClient 的作用
//============================== （1）. @FeignClient 的作用
	   @FeignClient(name = "user-service") // 指定要调用的服务名
	   public interface UserServiceClient {
	   	  @GetMapping("/users/{id}") // 指定目标服务的 API 路径
	   	  User getUserById(@PathVariable("id") Long id);
	 }

	（1.1）这段代码的作用是：定义一个 Feign 客户端，
		让当前服务可以调用 user-service 服务中的接口 /users/{id}。
	（1.2）当服务启动时，Spring 会扫描 @FeignClient 注解，并为其生成一个动态代理（FeignClient 的 Bean）。
		这个 Bean 就是 UserServiceClient，它负责与目标服务（user-service）通信。


//============================== （2）服务启动时注册 Feign Client
//============================== （2）服务启动时注册 Feign Client

	每一个带有 @FeignClient 的接口，都会被注册为一个 Spring Bean。
	@FeignClient(name = "rkzl-user-auth")
	public interface UserAuthClient {
		// 定义调用 rkzl-user-auth 服务的接口
	}
	启动时，Spring 会自动注册一个 UserAuthClient Bean，
	名字默认为 rkzl-user-auth.FeignClientSpecification。

//==============================（3）问题分析
//==============================（3）问题分析

The bean 'rkzl-user-auth.FeignClientSpecification'  could not be registered. 
A bean with that name has already been defined and overriding is disabled.

这个是说已经能一个叫 这个名字的Bean了，

		//=================（4）代码跟踪
		//=================（4）代码跟踪
		（1）common-constants 模块
		public class ServerNameConstants {
			public static final String USER_AUTH = "rkzl-user-auth";
		}

		（2）common-user-auth-api 模块
		@FeignClient(value = ServerNameConstants.USER_AUTH, path = UserAuthRpcConstants.USER)
		public interface UserAuthRpcServer {

		}



