
Elasticsearch 是一个需要独立启动的服务。

//=============================================（1）步骤 1：安装 Elasticsearch
//=============================================（1）步骤 1：安装 Elasticsearch
（1）下载 Elasticsearch

（2）启动 Elasticsearch 服务
	解压后进入 bin 目录，运行：

	（1）elasticsearch.bat
	（2）./elasticsearch

（3）验证服务是否启动

	（1）打开浏览器访问：
		http://localhost:9200
		http://192.168.100.102:30222
		
	（2）返回类似 JSON：
		{
		  "name": "your-node-name",
		  "cluster_name": "elasticsearch",
		  "version": {
			"number": "8.x.x"
		  }
		}



//=============================================（2）步骤 2：添加 Maven 依赖
//=============================================（2）步骤 2：添加 Maven 依赖
<dependency>
    <groupId>co.elastic.clients</groupId>
    <artifactId>elasticsearch-java</artifactId>
    <version>8.10.0</version> <!-- 替换为你的 Elasticsearch 版本 -->
</dependency>


//=============================================（3）步骤 3：连接 Elasticsearch 服务
//=============================================（3）步骤 3：连接 Elasticsearch 服务

在代码中通过 Java 客户端连接 Elasticsearch：

import co.elastic.clients.elasticsearch.ElasticsearchClient;
import co.elastic.clients.elasticsearch.core.SearchRequest;
import co.elastic.clients.elasticsearch.core.SearchResponse;
import co.elastic.clients.transport.rest_client.RestClientTransport;
import org.apache.http.HttpHost;
import org.elasticsearch.client.RestClient;
import co.elastic.clients.json.jackson.JacksonJsonpMapper;

public class ElasticsearchExample {
    public static void main(String[] args) throws Exception {
        // 创建连接
        RestClient restClient = RestClient.builder(new HttpHost("localhost", 9200)).build();
        RestClientTransport transport = new RestClientTransport(restClient, new JacksonJsonpMapper());
        ElasticsearchClient client = new ElasticsearchClient(transport);

        // 示例：简单搜索
        SearchRequest request = SearchRequest.of(r -> r.index("your-index").query(q -> q.match(m -> m.field("field").query("value"))));
        SearchResponse<Object> response = client.search(request, Object.class);

        // 输出结果
        System.out.println(response.hits().hits());
    }
}


