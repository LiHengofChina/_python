

//===========================（1）我在读取mysql的日志文件的时候，
//===========================（1）我在读取mysql的日志文件的时候，
由于mysql的 "查询日志" 写在一个文件中的
如：/var/lib/mysql/localhost.log

所以我可以反复读取一个文件，每次从某个指针位置 开始读取
如：

第一次 /var/lib/mysql/localhost.log		0			24914599
第二次 /var/lib/mysql/localhost.log		24914599	24919877
第三次 /var/lib/mysql/localhost.log		24919877	24924898


//===========================（2）然而：td-sql它会把日志记录在多个文件
//===========================（2）然而：td-sql它会把日志记录在多个文件

[root@localhost log]# ls -al sql_instance_*
-rw-rw----. 1 tdsql users  16384 Feb 19 16:55 sql_instance_15002.2025-02-19.0
-rw-rw----. 1 tdsql users      0 Feb 20 17:39 sql_instance_15002.2025-02-20.0
-rw-rw----. 1 tdsql users      0 Feb 21 23:13 sql_instance_15002.2025-02-21.0
-rw-rw----. 1 tdsql users      0 Feb 22 00:00 sql_instance_15002.2025-02-22.0
-rw-rw----. 1 tdsql users      0 Feb 23 00:00 sql_instance_15002.2025-02-23.0
-rw-rw----. 1 tdsql users      0 Feb 24 00:00 sql_instance_15002.2025-02-24.0
-rw-rw----. 1 tdsql users      0 Feb 25 00:00 sql_instance_15002.2025-02-25.0
-rw-rw----. 1 tdsql users      0 Feb 26 16:53 sql_instance_15002.2025-02-26.0
-rw-rw----. 1 tdsql users      0 Feb 27 00:00 sql_instance_15002.2025-02-27.0
-rw-rw----. 1 tdsql users  56762 Feb 28 16:48 sql_instance_15002.2025-02-28.0
-rw-rw----. 1 tdsql users      0 Mar  1 00:00 sql_instance_15002.2025-03-01.0
-rw-rw----. 1 tdsql users  68446 Mar  2 19:19 sql_instance_15002.2025-03-02.0
-rw-rw----. 1 tdsql users 327361 Mar  3 23:19 sql_instance_15002.2025-03-03.0
-rw-rw----. 1 tdsql users  59672 Mar  4 15:46 sql_instance_15002.2025-03-04.0


//========= 
//========= 

它是通过文件名来区分，它有几个维度

（1）日期：如文件名中有 2025-03-04 这样的日期

（2）后续：同一天也可能有多个文件，如
			2025-03-04.0
			2025-03-04.1

所以我可以把文件名中 "日期部分" 的中的 - 和 . 
删除之后，转换成数字，如：

202502190
202502191
202502192
202502200
202502210
202502211
202502212
202502220
202502230
202502240
202502250
202502260
202502270
202502271
202502280
202503010
202503011
202503020
202503030
202503040


这样我可以很方便的找出最新的文件名是哪一个，也方便比较大小



//====================================================================================================================== 所以我进行了以下的分析：
//====================================================================================================================== 所以我进行了以下的分析：


//=============================================== mysql
//=============================================== mysql

mysql 是 "数据库只会把日志写入到一个文件"， 所以拿到那个文件反复读取就好了

一个固定文件（反复读取一个文件）：

192.168.100.231|/var/lib/mysql/localhost.log      0|0
192.168.100.231|/var/lib/mysql/localhost.log      0|0


//=============================================== td-sql会把日志写入到多个文件：
//=============================================== td-sql会把日志写入到多个文件：

（1）第一次读取：虽然有多个文件，
		 但是我  "创建任务的那一刻" 也 "只有一个文件" 在写日志
		 所以我拿到 "那个文件（文件名最大的那个）的完整路径"，
		（1）从 0|0 开始读取  直到结束，
		（2）结束时  "更新（两个）文件指针"
		（3）此时 map 里面只有一个key


（2）后续读取分情况
		（1）"数据库" 还是写 "这个文件" 		//怎么判断： "没有比它'名称'更大的文件名"
			    （1）从 "上一次的位置" 到 "结束"
				（2）结束时  "更新（两个）文件指针"
				（3）此时map还是一个key

		（2）"数据库" 已经更换了 "文件写日志"	//怎么判断： "有比它'名称'更大的文件名"
			  （1）拿到 "比它更大文件名" 列表包括它自己，
					从最小的开始读取，最小的就是它自己
					（1）最小文件：从指定位置读取到结果
					（2）中间文件：从0读取到结束
					（3）最大文件：从0读取到指定位置


					直到最大文件名
			  （2）删除之前map中的key
			  （3）放入新的key
			  （4）此时map还是一个key，但是key的名字变成了最新的了。

//=========================所以流程就是
//=========================所以流程就是

（1）获取 "最大的日志文件名称的名字"，并转换为数字 ，方便比较大小


（2）如果第一次执行
		  if( executionCount == 1){
			  //按流程处理完成 
		  }

（3）判断map中 "文件的名称" 和 "现在文件名称大小"
		
		if( 现在文件名称的值更大){
			说明日志文件已经更换
		}else if( 值相同){
			说明没有更换文件，继续读取就可以了
		}
 