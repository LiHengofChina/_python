
//========================================== 已解决（调度器初始化就配置了）
//========================================== 已解决（调度器初始化就配置了）

//（1）任务调度线程数量 
//（2）数据存储到数据库中
//（3）任务数据（执行数据、历史记录）等等要保存到数据库
		//要有这些接口，查看任务的执行、结果
//============================================ 接口参数：
//============================================ 接口参数：

//数据源信息，
	//传ID进去，在任务中查询
	//数据源名称：
	//其它可能：日志路径参数等等

//============================================ 执行方式
//============================================ 执行方式

/** 先不考虑这些内容
（1）立即执行 //
（2）点击执行 //每次执行都去点击
（3）定时执行 //配置执行周期
（3）crontab  //根据crontab配置的时间来执行
*/

//当前只考虑：
//（1）创建后  "初始执行时间"，
//（2）执行周期

//============================================ 任务管理
//============================================ 任务管理

//（1）先不讨论具体的任务，因为 "具体的任务" 我会根据 "数据来判断"
//（2）组不需要了吧，全部统一为默认的组
//（3）任务设计为只能  "添加" "删除" "详情" "列表"，修改操作会导致历史数据不一致

//=============
//=============

//（1）添加
//（2）删除 //判断是否在运行中
//
//（3）详细
//
		//	taskName
		//	taskDescription
		//	triggerDescription
		//	firsttTime
		//	interval
		//	sourceId

		//（1）任务状态
		//（2）下一次执行时间
		//（3）数据源名称

（4）列表
		//================== 列表展示字段
		////================== 列表展示字段
		//（1）任务名称显示时给它以_分隔，从右到左边，为显示名
		//（2）数据源名称
		//（3）当前执行的状态
		//（4）下一次执行时间， 下一次执行时间这个字段重要 
		//			通过 cron 表达式，得到下一次执行时间有Demo	

//（5）操作：



/**以下都不考虑
（1）启动任务
（2）停止任务
（3）手工执行一
（4）需要手工执行一次
		//任务可能需要手工执行一次
		//这种情况加锁
		//加锁是锁定 "目标数据源ID"
（5）任务类型是可以中止的那种任务
（6）终止任务，但是并不是删除 //这个也暂时不考虑
（7）重新启用	//这个也暂时不考虑
*/

//============================================  quartz 关注点
//============================================  quartz 关注点


//==================== 触发器和任务类型
//==================== 触发器和任务类型

//（1）任务需要 "有状态" 的
//			//不能前后并行
//			//熄火策略为，错过了，就不再执行，放弃就好了


//（2）触发器类型有两种
//			（1）. SimpleTrigger //我使用这种应该就可以了
//			（2）. CronTirgger
//				//任务是定时执行，其实也就是周期执行
//				////如每天凌晨2点



//（3）任务熄火策略为，错过了，就不再执行，放弃就好了


//（4）要给任务加锁，防止以后多个节点运行任务
		//采用集群模式











