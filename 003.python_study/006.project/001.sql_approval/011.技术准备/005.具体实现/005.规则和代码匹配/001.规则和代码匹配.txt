

（1）解决问题
	"审核规则" 应该是根据配置的 "规则" 去处理SQL
	 而不是判断到是什么就都去处理了。

（2）关键问题是：
		比如：有一条规则 " 禁止 where 条件后面 恒等于1"
		（1） “规则模板” 里面有这条规则，那么就要执行相关逻辑审核。
		（2） “规则模板” 里面没有这条规则，那么就不能执行相关逻辑（一片代码或一个函数）

		这样一来就不就形成了 " 一条规则" 需要（一片代码或一个函数）

		如果 "是系统内置规则" 这还好说，我可以提前写好一片代码（通过反射来）
				/**
				 这样实现就是：
				 为每个规则写一段代码或函数，，

				 在规则中配置 “函数或类或其它” 的名字,
				 审核执行时，通过过反射，来调用之前写的代码来执行
				 让它们找到对应的代码执行

				*/
	//======================= 
	//======================= 
	但是如果 "用户自定义"的 后期规则，让它和哪一片代码对应起来呢？
	那么就不配置函数了，那么配置函数的地方应该是一段脚本或正则表达式，

	然后结合:
		"规则类型"： rule_type：DDL_SPEC(1, "DDL规范"), INDEX_SPEC(2, "索引规范"), COMMAND_SPEC(3, "命令规范"),
		"应用SQL类型"：SELECT、DELETE、INSERT、UPDATE：
		"操作目标"： FIELD(1, "字段"), DATABASE(2, "数据库"), EVENT(3, "事件"), FUNCTION(4, "函数"),
	这几个字段：
		应用正则去做判断得出审核结论

		这样是否能够实现它呢？


		利用那几个字段  + 脚本 生成一段代码，
		而在运行时动态加载它并执行

		freemake，等等技术，
		就像那个JCC动态生成代码





