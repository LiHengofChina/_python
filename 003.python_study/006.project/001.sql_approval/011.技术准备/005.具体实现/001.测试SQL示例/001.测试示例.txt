	
//================================== 字段列 不能有*
//================================== 字段列 不能有*
"sql": "select *,`name` from `student` t",


//================================== DELETE 和 UPDATE 必须带有 where
//================================== DELETE 和 UPDATE 必须带有 where


"sql": "DELETE FROM `student` where 1 = 2 ",

"sql": "DELETE FROM `student`",

"sql": "DELETE FROM `student` where 1 = 1 ",

"sql": "UPDATE `student` SET `name` = 1 where 3 = 4 ",

"sql": "UPDATE `student` SET `name` = 1 ",

"sql": "UPDATE `student` SET `name` = 1 where 3 = 3 ",

"sql": "UPDATE `student` SET `name` = 1 where 3 = 3  and `name` = 'li' ",

"sql": "CREATE TABLE IF NOT EXISTS `my_table` (`id` INT, `PRIMARY` KEY, `name` VARCHAR(100) )",

//================================== 不能为 NULL
//================================== 不能为 NULL

"sql": "INSERT INTO `student` ( `id`, `name`, `sex`) VALUES ( 1, 'Alice', NULL) ",
"sql": "INSERT INTO `student` ( `id`, `name`, `sex`) VALUES ( 1, 'Alice', 'S'), ( 1, 'Alicex', NULL)  ",

"sql": "INSERT INTO `student` ( `id`, `name`, `sex`) VALUES ( 1, 'Alice', 'S'), ( 1, 'Alicex', 'null')  ",

"sql": "INSERT INTO `student` ( `id`, `name`, `sex`) VALUES ( 1, 'Alice', 'S'), ( 1, 'Alicex', 'hr')  ",

//============
//============

"sql": " UPDATE `student` SET `sex` = NULL WHERE `id` = 1  ",
"sql": " UPDATE `student` SET `sex` = 'IT',`name` = null WHERE `id` = 1  ",


"sql": " UPDATE `student` SET `sex` = 'IT',`name` = 'null' WHERE `id` = 1  ",

"sql": " UPDATE `student` SET `sex` = 'IT',`name` = 'xx' WHERE `id` = 1  ",

//============
//============

"sql": " SELECT * FROM `student` WHERE `name` = NULL ",
"sql": " SELECT * FROM `student` WHERE `name` != NULL ",
"sql": " SELECT * FROM `student` WHERE `name` IS NULL ",
"sql": " SELECT * FROM `student` WHERE `name` IS NOT NULL ",

"sql": " SELECT * FROM `student` WHERE `name` = NULL and `id` = 1 and `sex` = 'x' ",

//奇葩SQL
"sql": " SELECT * FROM `student` WHERE `name` = 'my name is null' and `id` = 1 and `sex` = 'x' ",

"sql": " SELECT * FROM `student` WHERE `name` = 'x' ",


//================================== join 表数量
//================================== join 表数量

//-- from 位置 关联 3张表 
"sql": "  SELECT `s`.`name`, `c`.`course_name`, `er`.`score` FROM `student` `s` JOIN `enrollment` `e` ON `s`.`id` = `e`.`student_id` RIGHT JOIN `course` `c` ON `e`.`course_id` = `c`.`id` LEFT JOIN `exam_results` `er` ON `e`.`student_id` = `er`.`student_id` AND `e`.`course_id` = `er`.`course_id` WHERE `er`.`score` > ( SELECT AVG(`score`) FROM `exam_results` WHERE `course_id` = `c`.`id`)  ",


//-- from 位置 关联 4张表 
"sql": "  SELECT  `s`.`name`, `c`.`course_name`, `er`.`score` FROM `student` `s` JOIN `enrollment` `e` ON `s`.`id` = `e`.`student_id`  RIGHT JOIN `course` `c` ON `e`.`course_id` = `c`.`id` LEFT JOIN `exam_results` `er` ON `e`.`student_id` = `er`.`student_id` AND `e`.`course_id` = `er`.`course_id`  LEFT JOIN  table3 on table3.id = c.id  ",

//-- from 位置 关联 0张表 
"sql": "select *,`name` from `student` t",

 

//-- from 位置 关联 5张表，其中一个是子查询
"sql": "   SELECT  `s`.`name`,  `c`.`course_name`,  `er`.`score`  FROM `student` `s` JOIN `enrollment` `e` ON `s`.`id` = `e`.`student_id` RIGHT JOIN `course` `c` ON `e`.`course_id` = `c`.`id`  LEFT JOIN `exam_results` `er` ON `e`.`student_id` = `er`.`student_id` AND `e`.`course_id` = `er`.`course_id`  LEFT JOIN  table3 on table3.id = c.id left join ( SELECT id FROM table1 ) table1 on table1.id = c.id ", 


//-- where 语句 1级子查询  3个where条件

"sql": "   SELECT  `s`.`name`,  `c`.`course_name`,  `er`.`score`  FROM `student` `s` JOIN `enrollment` `e` ON `s`.`id` = `e`.`student_id` RIGHT JOIN `course` `c` ON `e`.`course_id` = `c`.`id`  WHERE `s`.`name` IN ( SELECT `name` FROM `student` WHERE `age` > 20 ) and `s`.`name` = 'xx' and `s`.`id` = 1 ",  


//-- where 语句 1级子查询  3个where条件（后2个带子查询）
"sql": "   SELECT  `s`.`name`,  `c`.`course_name`,  `er`.`score`  FROM `student` `s` JOIN `enrollment` `e` ON `s`.`id` = `e`.`student_id` RIGHT JOIN `course` `c` ON `e`.`course_id` = `c`.`id`  WHERE `s`.`name` = 'xx'  and `s`.`name` IN ( SELECT `name` FROM `student` WHERE `age` > 20 ) and `s`.`id` in  (SELECT `id` FROM `student` WHERE `age` > 10)",  




//-- where 语句 1级子查询  3个where条件（第3个不合格 ）
"sql": "   SELECT `s`.`name`, `c`.`course_name`, `er`.`score` FROM `student` `s` JOIN `enrollment` `e` ON `s`.`id` = `e`.`student_id` RIGHT JOIN `course` `c` ON `e`.`course_id` = `c`.`id` WHERE  `s`.`name` = 'xx'   AND `s`.`name` IN (  SELECT `name`  FROM `student` `st`  JOIN `address` `a` ON `st`.`id` = `a`.`student_id` JOIN `city` `ci` ON `a`.`city_id` = `ci`.`id`  JOIN `country` `co` ON `ci`.`country_id` = `co`.`id` JOIN `university` `u` ON `co`.`university_id` = `u`.`id`  WHERE `st`.`age` > 20 )  AND `s`.`id` IN (  SELECT `id`  FROM `student` `st` JOIN `enrollment` `en` ON `st`.`id` = `en`.`student_id`  JOIN `course` `co` ON `en`.`course_id` = `co`.`id` JOIN `professor` `pr` ON `co`.`professor_id` = `pr`.`id`  JOIN `department` `d` ON `pr`.`department_id` = `d`.`id` WHERE `st`.`age` > 10 ) ",  


//-- where 语句 1级子查询  3个where条件（第2个不合格 ）
"sql": "   SELECT `s`.`name`, `c`.`course_name`, `er`.`score` FROM `student` `s` JOIN `enrollment` `e` ON `s`.`id` = `e`.`student_id` RIGHT JOIN `course` `c` ON `e`.`course_id` = `c`.`id` WHERE  `s`.`name` = 'xx'   AND `s`.`name` IN (  SELECT `name`  FROM `student` `st`  JOIN `address` `a` ON `st`.`id` = `a`.`student_id` JOIN `city` `ci` ON `a`.`city_id` = `ci`.`id`  JOIN `country` `co` ON `ci`.`country_id` = `co`.`id` JOIN `university` `u` ON `co`.`university_id` = `u`.`id`  WHERE `st`.`age` > 20 )  AND `s`.`id` IN (  SELECT `id`  FROM `student` `st`  WHERE `st`.`age` > 10 ) ",  


//-- where 中没有子查询
"sql": "   SELECT `s`.`name`, `c`.`course_name`, `er`.`score` FROM `student` `s` JOIN `enrollment` `e` ON `s`.`id` = `e`.`student_id` RIGHT JOIN `course` `c` ON `e`.`course_id` = `c`.`id` WHERE  `s`.`name` = 'xx'    or  `s`.`name` = 'yy'    ",  


//-- where 中 单个子查询深度  ------- 
"sql": " SELECT `s`.`name`, `c`.`course_name`,  `er`.`score` FROM `student` `s` JOIN `enrollment` `e` ON `s`.`id` = `e`.`student_id` RIGHT JOIN `course` `c` ON `e`.`course_id` = `c`.`id` WHERE `s`.`name` IN ( SELECT `name` FROM `student` `st` JOIN `address` `a` ON `st`.`id` = `a`.`student_id` JOIN `city` `ci` ON `a`.`city_id` = `ci`.`id` JOIN `country` `co` ON `ci`.`country_id` = `co`.`id`  WHERE `st`.`age` > 30 AND `st`.`id` IN ( SELECT `id` FROM `student` `st2` JOIN `enrollment` `e2` ON `st2`.`id` = `e2`.`student_id` JOIN `course` `c2` ON `e2`.`course_id` = `c2`.`id` JOIN `professor` `pr` ON `c2`.`professor_id` = `pr`.`id`  WHERE `st2`.`age` > 25 AND `st2`.`name` IN ( SELECT `name`  FROM `student` `st3` JOIN `department` `d` ON `st3`.`department_id` = `d`.`id` JOIN `university` `u` ON `d`.`university_id` = `u`.`id` WHERE `st3`.`age` > 20 ) ) ) ",


//-- where 中 单个子查询深度  ------- 
"sql": " SELECT s.name, c.course_name FROM student s JOIN enrollment e ON s.id = e.student_id RIGHT JOIN course c ON e.course_id = c.id WHERE s.name IN ( SELECT st.name FROM student st  JOIN address a ON st.id = a.student_id JOIN city ci ON a.city_id = ci.id WHERE st.age > 25 AND st.id IN (  SELECT st2.id FROM student st2 JOIN enrollment e2 ON st2.id = e2.student_id  JOIN course c2 ON e2.course_id = c2.id  WHERE st2.age > 20    )) ",


//-- where 中 嵌套三层 三层串行
"sql": " SELECT s.name, c.course_name FROM student s JOIN enrollment e ON s.id = e.student_id RIGHT JOIN course c ON e.course_id = c.id WHERE s.name IN ( SELECT st.name FROM student st  JOIN address a ON st.id = a.student_id JOIN city ci ON a.city_id = ci.id WHERE st.age > 25 AND st.id IN (  SELECT st2.id FROM student st2 JOIN enrollment e2 ON st2.id = e2.student_id  JOIN course c2 ON e2.course_id = c2.id  WHERE st2.age > 20    )) ",


//-- where 中 嵌套两行 后面两个并行

"sql": "  SELECT `S`.`NAME`, `C`.`COURSE_NAME` FROM `STUDENT` AS `S` INNER JOIN `ENROLLMENT` AS `E` ON `S`.`ID` = `E`.`STUDENT_ID` RIGHT JOIN `COURSE` AS `C` ON `E`.`COURSE_ID` = `C`.`ID` WHERE  `S`.`NAME` IN ( SELECT `ST`.`NAME`  FROM `STUDENT` AS `ST`  INNER JOIN `ADDRESS` AS `A` ON `ST`.`ID` = `A`.`STUDENT_ID` INNER JOIN `CITY` AS `CI` ON `A`.`CITY_ID` = `CI`.`ID` WHERE `ST`.`AGE` > 25 ) AND `S`.`ID` IN (  SELECT `ST2`.`ID` FROM `STUDENT` AS `ST2`  INNER JOIN `ENROLLMENT` AS `E2` ON `ST2`.`ID` = `E2`.`STUDENT_ID` INNER JOIN `COURSE` AS `C2` ON `E2`.`COURSE_ID` = `C2`.`ID`   WHERE `ST2`.`AGE` > 20 ) ",

//--- 4层的sql， 2层有两个select，3层有3个select，4层有一个select 


//--- 5层结构

第1层 1个select
第2层 3个select
第3层 1个select
第4层 1个select
第5层 1个select  

"sql": " SELECT   S.NAME,  C.COURSE_NAME, (SELECT COUNT(*)  FROM ENROLLMENT E   WHERE E.STUDENT_ID = S.ID   AND E.COURSE_ID IN (  SELECT C2.ID  FROM COURSE C2   WHERE C2.CATEGORY = 'Mathematics'   AND C2.ID IN ( SELECT C3.ID FROM COURSE C3 WHERE C3.DEPT_ID = ( SELECT D.ID FROM DEPARTMENT D  WHERE D.NAME = 'Engineering'  ) ) ) ) AS ENROLLMENT_COUNT FROM   STUDENT S INNER JOIN ENROLLMENT E ON S.ID = E.STUDENT_ID RIGHT JOIN COURSE C ON E.COURSE_ID = C.ID WHERE   S.AGE > ( SELECT AVG(ST.AGE)  FROM STUDENT ST WHERE ST.GENDER = 'M'   ) AND C.CATEGORY IN (  SELECT CATEGORY FROM COURSE WHERE LEVEL = 'Advanced' ) ",



