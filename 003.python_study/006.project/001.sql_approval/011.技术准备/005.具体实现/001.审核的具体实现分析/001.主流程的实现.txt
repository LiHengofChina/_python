

核心在于根据 "规则的审核目标" 实现公共逻辑和各自的审核逻辑。


//======================================= 公共审核逻辑是所有规则共享的，例如：
//======================================= 公共审核逻辑是所有规则共享的，例如：

规则匹配：解析 SQL 后，针对不同目标（字段、表、用户等）执行通用的规则验证流程。
日志记录：记录每条规则的审核结果，方便后续追踪。
结果汇总：收集所有规则的审核状态，生成审核报告。



//======================================= 各自的审核逻辑
//======================================= 各自的审核逻辑

各数据库类型的审核器针对不同 审核目标 实现特定逻辑，例如：

	字段审核：
		（1）MySQL 中，可能需要校验是否使用非法字段名。
		（2）Oracle 中，可能需要校验字段名大小写规则。

	表审核：
		MySQL 中，校验是否使用了非分区表。
		Oracle 中，校验表空间是否超出限制。

	索引审核：
		根据数据库类型，校验是否缺失索引或存在冗余索引。



//======================================= 审核流程的组织
//======================================= 审核流程的组织

公共逻辑：在顶层服务中处理（如遍历规则、调用具体审核器）。

具体逻辑：在 AbstractDatabaseAuditProcessor 的方法中实现，子类覆盖需要的目标审核逻辑。

//======================================= 几个关键的字段
//======================================= 几个关键的字段


//========= 审核过程中需要注意的字段
//========= 审核过程中需要注意的字段

//（1）数据库类型 //开的判断，获取审核器要使用


//（2）操作目标 //这个是
		//同一种 “操作目标” 的审核内部实现逻辑基本相同
		//
		//OperationTarget 确定了规则的应用场景或目标，
		//它可以用来决定该规则是使用 正则表达式 进行检查，
		//还是需要通过 查询数据库 或进行 其他处理。




//（3）脚本  //审核判断的关键条件


//（4）错误等级 //处理结果的重要条件


//（5）适用场景 //在执行审核时进行验证校验验证






