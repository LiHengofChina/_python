
现在我们继续，

（1）
假如 我的系统中有三个角色.
R001  : DEVELOPER，开发人员
R002  ：DBA，负责审核的
R003  ：Operations，也负责审核同时可以执行的
假设这个设计没有问题，就这样吧

（2）审批流程为：
首先 R002 先审批，然后 R003 审批，之后就可以执行这个工单了
这里 R002 和 R003下的用户 有审批权限
它包括两个层权限 1.能看到审批按钮， 2.后台执行审批时能过

（3）
当 R001下 user 创建了一个工单
产生数据一条 work_order 数据，
同时产生一条数据：work_order_approval_record

（4）通知审批人
	（1）时机1，创建工时，首次发送通知
	（2）时机2，每次审批之后，只要不是最后一次就需要发送通知
	//总结就是取到了下一个审批步骤，就要发送

（5）审批人通过"未读消息" 查询审批列表，然后跳转到某个工单的详情
     它就可以点击审批，进行审批处理或其它处理（如执行）

//======================= 现在问题来了，
//======================= 现在问题来了，
第一轮审批是 R002 角色下的用户审批
第二轮审批是 R003 角色下的用户审批

假如所有人都可以查询这个工单的详情，
（意思是说：所有人可以通过列表点击进来，但是审批人是通过未处理的消息列表进来的）

这时 R002 和 R003角色的用户查看这个工单，
这两种用户都有审批权限，但是这里应该由R002的用户先审批，然后由R003的用户后审批
这时怎么控制 "当前审批人去'审批'呢"，后续审批人不能看到

//======================================================================================
//======================================================================================


为了实现这个控制，我们可以在审批流程中引入一种状态管理机制，确保审批流程按照顺序进行，
并且只有当前的审批人（根据角色顺序）才能进行审批。以下是一个可能的解决方案：

增加字段：

`next_approval_role_id` CHAR(36) COMMENT '下一步审批角色ID',  -- 下一步角色ID
`this_approval_order` INT COMMENT '这次的审批序号',  -- 当前审批的序号


