
//====================================== RelOptTable.ViewExpander
//====================================== RelOptTable.ViewExpander

RelOptTable.ViewExpander 是 一个接口，
用于 展开视图（View Expansion），它的作用是：

（1）如果 SQL 语句涉及视图，这个接口可以将 视图的 "SQL 解析" 并转换为 "RelNode"。
（2）允许用户 自定义如何解析和展开视图，从而支持更灵活的视图解析逻辑。

//====================================== ViewExpander 的核心方法
//====================================== ViewExpander 的核心方法
public interface RelOptTable.ViewExpander {
    RelRoot expandView(RelDataType rowType, String queryString, 
                       List<String> schemaPath, @Nullable List<String> viewPath);
}

参数
	（1）rowType：视图的 RelDataType（列类型）。
	（2）queryString：视图的 SQL 定义（如 CREATE VIEW ... AS SELECT ...）。
	（3）schemaPath：当前 Schema 的路径（用于解析视图内部的表）。
	（4）viewPath（可选）：视图的路径。
返回值
	RelRoot：展开后的 RelNode 及其相关的查询信息。


//====================================== 使用场景
//====================================== 使用场景

✅视图展开
（1）解析 CREATE VIEW my_view AS SELECT name, age FROM student
（2）expandView 方法 解析 SQL 并返回 RelNode，用于优化和执行。

✅ 动态 SQL 视图解析
（1）允许用户自定义视图展开逻辑，例如替换视图查询的参数，动态修改视图内容。
 
✅ 分布式 SQL 视图解析
（1）处理 跨数据库的视图，比如在 Calcite 连接多个数据源时，解析 SQL 视图并转换到 不同的数据源 查询。
 
//====================================== 示例：自定义视图展开
//====================================== 示例：自定义视图展开
//（1）假设我们有个视图：
CREATE VIEW my_view AS SELECT name, age FROM student;

//（2）可以这样实现 ViewExpander：
public class MyViewExpander implements RelOptTable.ViewExpander {
    @Override
    public RelRoot expandView(RelDataType rowType, String queryString, 
                              List<String> schemaPath, @Nullable List<String> viewPath) {
        System.out.println("展开视图: " + queryString);

        // 使用 SqlParser 解析 SQL 视图
        SqlParser parser = SqlParser.create(queryString);
        SqlNode sqlNode = parser.parseQuery();

        // 使用 SqlToRelConverter 转换 SQL 到 RelNode
        RelOptCluster cluster = RelOptCluster.create(new VolcanoPlanner(), new RexBuilder(new JavaTypeFactoryImpl()));
        RelRoot relRoot = new SqlToRelConverter(this, null, null, cluster, null, null)
                .convertQuery(sqlNode, false, true);

        return relRoot;
    }
}
📌 解析 SQL → 转换 RelNode → 返回 RelRoot，这样就能在 SQL 执行时自动展开视图！

//====================================== 总结
//====================================== 总结

🔹 RelOptTable.ViewExpander 主要用于 视图展开，将视图转换为 RelNode 进行优化和执行。
🔹 允许 自定义视图解析逻辑，比如 动态 SQL 解析、跨数据库视图、参数替换 等。
🔹 适用于 Calcite SQL 解析和优化，确保视图能像普通 SQL 语句一样使用。 🚀