

//======================================== RexNode 简介
//======================================== RexNode 简介

RexNode（Relational Expression Node）是 Calcite 中表示表达式的抽象类，
用于关系代数表达式（Relational Expression）。
它是 Calcite 查询优化 和 执行 过程中最核心的表达式表示方式。


//======================================== RexNode 主要子类
//======================================== RexNode 主要子类
（1）RexLiteral → 代表字面值（常量），如 1, 'hello', TRUE
（2）RexInputRef → 代表表中的字段引用，如 student.name
（3）RexCall → 代表函数调用或操作符，如 UPPER(name), age + 10
（4）RexOver → 代表窗口函数，如 SUM(salary) OVER (PARTITION BY dept)
（5）RexSubQuery → 代表子查询，如 WHERE age IN (SELECT age FROM employees)


// 创建一个布尔类型的字面值表达式 TRUE
RexNode rexLiteral = new RexLiteral(true, typeFactory.createSqlType(SqlTypeName.BOOLEAN), SqlTypeName.BOOLEAN);

// 创建一个列引用 age（索引为0）
RexNode rexInputRef = new RexInputRef(0, typeFactory.createSqlType(SqlTypeName.INTEGER));

// 创建一个加法表达式 age + 10
RexNode rexCall = rexBuilder.makeCall(
    SqlStdOperatorTable.PLUS, rexInputRef, new RexLiteral(10, typeFactory.createSqlType(SqlTypeName.INTEGER), SqlTypeName.INTEGER)
);


//======================================== 总结
//======================================== 总结
RexNode 是 Calcite 计算表达式的抽象类。
RexNode 主要用于 关系代数 计算，与 SQL 解析后的 SqlNode 结构不同。
主要有 字面值（RexLiteral）、列引用（RexInputRef）、函数/运算符（RexCall） 等子类。
SqlNode 是 SQL 解析的 AST，RexNode 是 SQL 转换后的关系代数表达式！

