
//=================================================== SqlCall 和 SqlOperatorTable 之间的关系
//=================================================== SqlCall 和 SqlOperatorTable 之间的关系

（1） SqlCall：是 SQL 语法中 "某个函数" 或 "运算符" 的 "具体调用"。
				它代表了 SQL 中的 "某个操作"，
					//如 UPPER(name) 或 age + 10，
					//并包含了操作符（如 UPPER 或 +）及其操作数。
				简单来说，SqlCall 是对 "SQL 中某个函数或运算符" 的 "具体实例化"，
				表示了一个 "实际的函数调用" 或 "运算符应用"。

（2）SqlOperatorTable：是一个包含了 "所有 SQL 操作符（函数和运算符）的容器"。
				它管理着 SQL 中可用的 "操作符（如加法、乘法、字符串连接、聚合函数等）"。
				
				SqlOperatorTable 提供了 "一种方式"，
				可以 "查找操作符"、
					 "定义操作符"的行为、
					 "运算符的" 参数数量、返回类型 等。



//=================================================== 关系：
//=================================================== 关系：

SqlCall 依赖于 SqlOperatorTable：
			   当 SQL 语句被解析时，
			   SqlParser 会解析 SQL 字符串并创建一个 SqlNode 树，
			   其中如果遇到 "运算符" 或 "函数调用"，它就会 "创建 SqlCall 对象" 。
			   而 "这些 SqlCall " 中包含的 "具体操作符" 是从 SqlOperatorTable 中 "查找并引用" 的。
			   SqlOperatorTable 提供了操作符的 "定义和行为"，SqlCall 则是 "具体的运算符应用"。


简言之，SqlOperatorTable 定义了 SQL 中的运算符和函数，
		而 SqlCall 表示 "这些运算符或函数" 的 "具体调用和使用"。
		因此，SqlOperatorTable 是 SqlCall 的 "数据来源和管理者"。

