

RexExecutor 是 Apache Calcite 中用于 执行（或简化）RexNode 表达式 的接口。

//=========================================================== 主要作用：
//=========================================================== 主要作用：

对 RexNode（表达式节点）进行 计算、简化、优化。
用于在优化过程中，常量折叠、表达式简化等任务。

//=========================================================== 常用实现：
//=========================================================== 常用实现：

RexExecutorImpl 是常用实现类。

//=========================================================== 重要方法：
//=========================================================== 重要方法：

（1）reduce()：
	 简化表达式（例如，3 + 5 简化为 8）。


（2）evaluate()：
	计算布尔条件（例如，age > 30）。

示例场景：
	解析 WHERE 条件 age > 30 AND true，可以利用 RexExecutor 将其简化为 age > 30。

//=========================================================== 工作流程：
//=========================================================== 工作流程：

（1）创建 RexExecutorImpl。
（2）将 RexNode 表达式传递给 reduce() 方法。
（3）返回简化后的表达式。

//================= 举例：
//================= 举例：

RelOptCluster cluster = ...;
RexExecutor executor = new RexExecutorImpl(new EmptyDataContext());

// 假设 `rexNode` 是 `1 + 1`
List<RexNode> inputExprs = Collections.singletonList(rexNode);
List<RexNode> outputExprs = new ArrayList<>();

// 简化为常量 `2`
executor.reduce(cluster.getRexBuilder(), inputExprs, outputExprs);

//=========================================================== 总结：
//=========================================================== 总结：

RexExecutor 负责 在优化器或表达式处理中执行或简化表达式，
			提高查询优化和执行的效率。


