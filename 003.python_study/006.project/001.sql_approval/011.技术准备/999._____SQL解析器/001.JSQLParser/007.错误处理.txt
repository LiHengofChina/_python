


public static void example6() throws Exception {
  CCJSqlParser parser = new CCJSqlParser(
      "select * from user; select from; select * from role" ) ;
  Statements statements = parser.Statements() ;
  System.err.println(statements.size()) ;
  statements.stream().forEach(System.out::println);
}



我们的第二条SQL是错误的。

如果你希望即便错了也继续向后解析，那么你可以通过如下的设置：



Statements statements = parser.withErrorRecovery(true).Statements() ;

使用withErrorRecovery方法，将继续到下一个语句分隔符并返回一个空语句。

SELECT * FROM user
null
SELECT * FROM role

//================================================= 你也可以如下的方式进行错误的处理：
//================================================= 你也可以如下的方式进行错误的处理：


Statements statements = CCJSqlParserUtil.parseStatements(
    "select * from user; select from; select * from role;"
    , parser -> parser.withUnsupportedStatements() );
statements.stream().forEach(System.out::println);

