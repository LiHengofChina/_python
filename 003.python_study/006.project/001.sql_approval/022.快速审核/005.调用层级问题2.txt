



//=======================================================================
//=======================================================================
在 Spring 里 Service 调用另一个 Service 完全没问题，也不会带来循环依赖（只要不是双向注入）。




//=======================================================================
//=======================================================================
抽取成更底层组件
如果你真的想避免“Service→Service”，可以把“保存目标信息”的那段逻辑提炼到一个独立的组件／工具类或直接放在 Repository 层：




//=======================================================================
//=======================================================================
在 DDD 里，你的 Application Service（应用服务）本质上就是用来组织各个领域操作的，
它可以依赖／注入其它 Application Service 或 Domain Service 来完成一个用例。只要注意：

（1）不要双向依赖——A 调 B，B 不要再去调 A，否则会循环依赖。

（2）职责分明——把纯业务逻辑放在 Domain Service／实体里，
	  Application Service 只负责 "编排流程"。

（3）若感觉 Service 太多依赖，可以再抽一个更高层的“用例服务”（Orchestrator）来组织调用。

总之，Application Service 间调用是常见且合理的做法。

