
TiDB 语法解析器

//================================================
//================================================

TiDB 语法解析器 是 TiDB 的一个核心组件，
用于 "解析 SQL 查询"，将其转换为抽象语法树（AST），
以供后续的 "优化和执行步骤"使用。

//================================================ 主要特点：
//================================================ 主要特点：


//（1）多数据库语法支持
//（1）多数据库语法支持
虽然 TiDB 的主要目标是兼容 MySQL，但为了便于迁移，
它还支持部分其他数据库的语法特性：

PostgreSQL： 一些 PostgreSQL 的特性被支持，例如 RETURNING 语句。
Oracle：	 部分 Oracle 样式的语法，例如 DATE 类型支持。
SQL Server： 一些特性如 TOP 子句（不过 LIMIT 是推荐的写法）。
SQLite：一些简单的 SQLite 风格语法被接受。

//（2）多数据库语法支持
//（2）多数据库语法支持
TiDB 使用了 Go 语言开发，解析器生成的抽象语法树（AST）结构高度模块化，易于修改和扩展。
这使得开发者能够快速适配新的 SQL 功能或语法。


//（3）错误提示友好：
//（3）错误提示友好：
解析器会在 SQL 语法错误时提供详细的错误提示，包括具体的错误位置和原因。

//（4）扩展性强：
//（4）扩展性强：
开发者可以通过修改解析器规则来支持自定义的 SQL 语法，适合定制需求。

//================================================ 支持的数据库功能
//================================================ 支持的数据库功能
MySQL：
     几乎所有标准的 MySQL SQL 语法均被支持。
     包括事务、锁机制、函数、触发器等（部分功能可能仍在优化中）。

PostgreSQL：
	 部分关键字和特性（例如 RETURNING）兼容。


兼容性增强：
	 Oracle 和 SQL Server 的部分功能可能需要迁移工具的辅助，例如使用 TiDB 的 数据迁移工具 DM。

//================================================ 不足与局限
//================================================ 不足与局限


（1）虽然支持多数据库的部分语法，但 TiDB 的解析器以 MySQL 为核心，
	 其他数据库的复杂特性（例如 PostgreSQL 的复杂索引类型或 Window Functions）可能无法直接支持。


（2）一些高级功能（例如存储过程、函数）在 TiDB 中并未完全实现，可能需要重新设计或替代方案。



