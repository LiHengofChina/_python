
//===========================================================
//（1）定义构建镜像的基础镜像：定义了构建镜像的基础镜像来源。
ARG BASE_IMAGE="hhyo/archery-base:sha-d8159f4"
FROM ${BASE_IMAGE}


//===========================================================
//（2）Shell 设置:指定后续命令使用 bash 而非默认的 sh。
// 因为 bash 允许使用更复杂的命令，如管道和 source。
SHELL ["/bin/bash", "-c"]


//===========================================================
//（3） 文件复制
//将 "当前上下文目录中的所有文件" 复制到 "镜像内的 /opt/archery/ 目录"。
//包括项目代码和配置文件，供后续步骤使用。
COPY . /opt/archery/


//===========================================================
//（4） 工作目录设置
//置后续命令的默认工作目录为 /opt/。
WORKDIR /opt/

//===========================================================
//（5） 用户添加
//在镜像内创建一个名为 nginx 的用户，用于运行 nginx 服务。
RUN useradd nginx



//===========================================================
//（6） 软件安装 和一系列的依赖



#archery
RUN apt-get update \
    && apt-get install -yq --no-install-recommends nginx mariadb-client \
    && source venv4archery/bin/activate \
    && pip install -r /opt/archery/requirements.txt \
    && pip install "redis>=4.1.0" \
    && cp -f /opt/archery/src/docker/nginx.conf /etc/nginx/ \
    && cp -f /opt/archery/src/docker/supervisord.conf /etc/ \
    && mv /opt/sqladvisor /opt/archery/src/plugins/ \
    && mv /opt/soar /opt/archery/src/plugins/ \
    && mv /opt/my2sql /opt/archery/src/plugins/ \
    && apt-get -yq remove gcc curl \
    && apt-get clean \
    && rm -rf /var/cache/apt/* \
    && rm -rf /root/.cache


//===========================================================
//（7） 端口暴露
// 声明容器对外暴露的端口为 9123。用于容器外部访问 Archery 服务。

#port

EXPOSE 9123

//===========================================================
//（8）启动脚本：
//设置容器启动时运行的命令。
//运行 Archery 的启动脚本 startup.sh，初始化服务。


#start service
ENTRYPOINT ["bash", "/opt/archery/src/docker/startup.sh"]



//=========================================================== 总结
//=========================================================== 总结


这个 Dockerfile 是基于官方基础镜像的二次构建,
但它需本个





