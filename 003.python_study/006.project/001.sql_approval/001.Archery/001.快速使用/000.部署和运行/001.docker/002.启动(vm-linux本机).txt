
//================================================================= Archery
//================================================================= Archery

https://archerydms.com/home/


//================================================================= （2）下载github上面的源码
//================================================================= （2）下载github上面的源码

（1）
	先下载 官方代码 Archery
	切换到 v1.11.3 Tag//注意，要使用 v1.11.3 Tag的代码

（2）代码存放目录
	/home/liheng/workspace_2024_12

（3）
	//把当前用户添加到vboxsf组
	sudo usermod -aG vboxsf liheng


//================================================================= （3）准备mysql数据目录
//================================================================= （3）准备mysql数据目录

 "容器中mysql" 挂载的目录，不能是 "虚拟机中在我本机的共享文件夹"

（1）创建一个mysql数据目录
	mkdir -p /home/liheng/data_mysql

（2）修改权限
	sudo chmod -R 777 /home/liheng/data_mysql

（3）修改配置文件挂载路径
    volumes:
      - "/home/liheng/data_mysql:/var/lib/mysql"


//================================================================= （4）启动 服务
//================================================================= （4）启动 服务

（1）进入目录：
	 cd /home/liheng/workspace_2024_12/Archery/src/docker-compose

（2）检查 .env  文件内容

	 docker compose --env-file .env -f docker-compose.yml config

（2）启动服务
	 docker compose -f docker-compose.yml up -d


（3）停止 服务
	 docker compose  -f docker-compose.yml down



//================================================================= （5）进入容器
//================================================================= （5）进入容器


docker exec -ti archery /bin/bash
cd /opt/archery


//================================================================= （6）表结构初始化（只执行一次）
//================================================================= （6）表结构初始化（只执行一次）


（1）创建数据库
先创建一个名为 archery 的数据库
字符集选择分别为：
utf8mb4
utf8mb4_general_ci


（2）执行脚本
source /opt/venv4archery/bin/activate
					//这段脚本是用于设置和管理 Python 虚拟环境（virtual environment）的激活与环境变量配置
					//就是说在 archery容器里面有自己的python


					//两个命令是 Django 项目中常用的数据库迁移命令，几乎所有 Django 项目在开发或部署时都需要执行它们。
python3 manage.py makemigrations sql
python3 manage.py migrate



//================================================================= （7）数据初始化
//================================================================= （7）数据初始化

python3 manage.py dbshell<sql/fixtures/auth_group.sql
python3 manage.py dbshell<src/init_sql/mysql_slow_query_review.sql


//================================================================= （8）创建管理用户
//================================================================= （8）创建管理用户

python3 manage.py createsuperuser

账号和密码
admin/admin

//================================================================= （9）重启服务
//================================================================= （9）重启服务

//在linux状态下重新启动

docker restart archery



//================================================================= （10）日志查看和问题排查
//================================================================= （10）日志查看和问题排查
docker logs archery -f --tail=10
logs/archery.log

//================================================================= （11）端口映射 
//================================================================= （11）端口映射 


部分虚拟机的端口映射出来


Archery     	TCP	127.0.0.1	9123  --->     172.18.0.1    9123  
Mysql     		TCP	127.0.0.1	3306  --->     172.18.0.1    3306  
goInception     TCP	127.0.0.1	4000  --->     172.18.0.1    4000  



//================================================================= （12）访问地址
//================================================================= （12）访问地址


http://127.0.0.1:9123/login/
admin/admin


