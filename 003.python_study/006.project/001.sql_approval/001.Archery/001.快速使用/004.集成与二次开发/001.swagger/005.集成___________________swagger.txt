

//====================================================== 主要的工具和库
//====================================================== 主要的工具和库

Swagger 可以与许多 Python Web 框架兼容。
通过集成 Swagger，您可以自动生成 API 文档，方便团队和用户理解和使用 API。



在 Python 项目的后端集成 Swagger 来生成 API 文档，
最常见的有 Flask 和 Django。

//======================================================（1）使用 Swagger 和 Flask 集成
//======================================================（1）使用 Swagger 和 Flask 集成

如果您使用的是 Flask，可以使用 Flask-RESTPlus 或 Flask-OpenAPI 这样的扩展来集成 Swagger。

（1）安装 Flask 和 Flask-RESTPlus：
	pip install Flask Flask-RESTPlus

（2）创建一个简单的 Flask 应用，并集成 Swagger：
	from flask import Flask
	from flask_restplus import Api, Resource

	app = Flask(__name__)
	api = Api(app, doc='/docs')  # Swagger UI 会通过 /docs 路由提供

	@api.route('/hello')
	class HelloWorld(Resource):
		def get(self):
			return {'message': 'Hello, world!'}

	if __name__ == '__main__':
		app.run(debug=True)


（3）启动后，访问 http://127.0.0.1:5000/docs 
	 就可以看到 Swagger UI，您可以通过它 "查看和测试" API。


//======================================================（2）使用 Swagger 和 Django 集成
//======================================================（2）使用 Swagger 和 Django 集成

如果您使用的是 Django，可以使用 drf-yasg 或 django-rest-swagger 来集成 Swagger。


（1）安装 Django 和 drf-yasg：
	pip install Django djangorestframework drf-yasg


（2）在 Django 项目中配置 Swagger：
	# settings.py
	INSTALLED_APPS = [
		...
		'rest_framework',
		'drf_yasg',
	]

（3）然后在 urls.py 中添加 Swagger 视图：
	from rest_framework import routers
	from drf_yasg.views import get_schema_view
	from drf_yasg import openapi
	from django.urls import path, include

	schema_view = get_schema_view(
		openapi.Info(
			title="My API",
			default_version='v1',
			description="Test description",
			terms_of_service="https://www.google.com/policies/terms/",
			contact=openapi.Contact(email="contact@myapi.local"),
			license=openapi.License(name="BSD License"),
		),
		public=True,
	)

	router = routers.DefaultRouter()

	urlpatterns = [
		path('api/', include(router.urls)),
		path('docs/', schema_view.with_ui('swagger', cache_timeout=0)),
	]


（4）启动 Django 项目后，访问 http://127.0.0.1:8000/docs/ 就可以看到 Swagger UI。


//======================================================（1） 使用 Swagger 生成 API 文档
//======================================================（1） 使用 Swagger 生成 API 文档
不论是 Flask 还是 Django，集成 Swagger 后，您可以通过以下方式描述 API：

（1）定义路由和方法：为每个 API 端点定义请求方法（如 GET、POST 等）。
（2）添加参数和返回值描述：指定请求的参数、请求体格式、响应体格式。
（3）生成和展示文档：Swagger UI 会自动生成并展示文档，方便开发者进行交互式测试。


//======================================================（1）其他 Python Web 框架
//======================================================（1）其他 Python Web 框架

如果您使用其他 Python Web 框架（如 FastAPI、Tornado 等），也可以通过类似的方式集成 Swagger：


（1）FastAPI 已经内建支持 OpenAPI 和 Swagger，您只需要简单地使用它即可生成 API 文档。
	from fastapi import FastAPI

	app = FastAPI()

	@app.get("/hello")
	def read_root():
		return {"message": "Hello, world!"}

启动后，FastAPI 会自动为您生成 Swagger UI，访问 http://127.0.0.1:8000/docs 查看。


