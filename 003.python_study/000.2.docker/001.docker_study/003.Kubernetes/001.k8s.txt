


//========================================================================================
//========================================================================================

Kubernetes 是一种容器编排和管理工具，用于部署、管理和扩展容器化应用。
		   虽然它和 Docker 都涉及容器技术，
		   但两者的 "定位和功能" 有明显区别。


//========================================================================================
//========================================================================================

Kubernetes  ：	一个容器编排工具，用于管理分布式的容器集群。
核心功能	：	管理多个容器的生命周期、伸缩、负载均衡等。
使用场景	：  适合大型分布式应用的部署和管理（多主机、多节点）。
复杂性		：	较高，需要配置多个组件，如 Pod、Service、Ingress。
扩展性		：  自动扩展、负载均衡、服务发现、滚动更新等功能强大。
依赖关系	:	通常依赖于 Docker 或其他容器运行时（如 Containerd）。


//======================================================================================== 关系：Kubernetes 和 Docker
//======================================================================================== 关系：Kubernetes 和 Docker


（1）Docker 是 Kubernetes 的基础：
		Kubernetes 使用 Docker 或其他容器运行时来运行容器。

（2）Docker 适合单机，Kubernetes 适合多机：
		Docker 适合在单机环境下快速启动和测试容器。
		Kubernetes 管理分布式容器集群，适合生产环境。

//====================== 总结
//====================== 总结
Docker 是一种容器技术，用于快速构建、运行和管理单个容器。
Kubernetes 是一种容器编排工具，帮助在分布式环境中部署和管理容器集群。
二者可以结合使用：Docker 提供容器基础，Kubernetes 管理容器化应用的生命周期和扩展。

