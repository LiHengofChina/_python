




//=============================== 本周总结 
//=============================== 本周总结 
本周工作主要内容：
一、本周主要完成了mftcc的本地环境搭建，包括37个代码库的导入，其中25个maven代码库，2个web代码库，其实的均为脚本库。
二、主要解决的难题：解决了web项目使用webpack打包后js过大，导致开发机器无法本地运行的问题，
解决办法：
（1）代码分割:将JS代码分割成更小的块。
（2）压缩：减少代码大小。
（3）静态资源：使用压缩工具优化图片和其他静态资源。
（4）并行构建：根据 CPU 核心数量来并行构建js项目
三、主要完成开发内容
（1）熟悉mftcc业务，了解系统功能。
（2）调整 "文件上传界面" 按扭样式、进度条展示、保存验证。
（3）对上传功能js部分进行懒加载优化。




//===============================（2024.7.29~2024.8.2）本周工作主要内容：
//===============================（2024.7.29~2024.8.2）本周工作主要内容：
一、远程桌面开发环境安装。
二、web前端部分功能迁移至移动端分析。
（1）梳理前端web登陆功能以及相应的js封装， 便于部分业务迁移到移动端，同时能复用后端的所有接口。
（2）考虑移动端场景，需要对部分资源压缩处理，对处理方式的效果验证。
三、主要完成开发内容
（1）问题定位 ：密码修改的验证码发送接口未配置白名单的问题定位。
（2）问题定位 ："pc端审批" 迁移 "移动端"业务分析，了解 "立项审批" 业务流程，
（3）示例app程序开发：使用 vue.js 编写示例app页面示例，对js实现懒加载（分割+延迟动态导入），对图片进行懒加载、压缩打包，以适应 "移动端场景"。




//===============================（2024.8.5~2024.8.9）本周工作主要内容：
//===============================（2024.8.5~2024.8.9）本周工作主要内容：


一、例程序编写
（1）示例程序：完成登陆接口调用及调式
（2）示例程序：完成审批列表页面编写及接口调用。
（3）app端基础框架公共代码和基础函数编写、清理store和路由等等公共组件。
二、下周计划
（1）完成app端立项审批详情页面开发及接口调用。
（2）app审批"免登陆"方案确认。

//===============================（2024.8.12~2024.8.16）本周工作主要内容：
//===============================（2024.8.12~2024.8.16）本周工作主要内容：

一、系统分析
（1）mftcc的sys-base"登陆流程"代码分析，mftcc-gateway 权限拦截流程分析，为app审批免登陆作准备。
（2）app审批免登陆准备：对访问地址签名，然后系统过滤器的基础上添加解签名提取信息。
二、参与调研
（1）中海现场-运营部，参与调研与分析。
（2）益民现场，参考调研与分析。
二、需求分析
（1）分析 "项目要素" 变更相关改动。
（2）分析 "项目要素" 变更后数据同步相关改动。

//===============================（2024.8.19~2024.8.23）本周工作主要内容：
//===============================（2024.8.19~2024.8.23）本周工作主要内容：


一、代码分析： "项目要素"变更代码分析
（1）立项保存数据、保存提交逻辑。
（2）创建申请“变更申请”保存页面初始接口、页面、提交逻辑分析。
（3）查看详情、审批详情页展示的页面代码以及后台的接口。
二、代码修改：
（1）完成立项信息：逾期利率、手续费金额的修改开发。
（2）补充和检测 "立项信息" 的其它字段修改。
（3）起租日与保证金金额更新。
（4）其优化和页面调整


//===============================（2024.8.26~2024.8.30）本周工作主要内容：
//===============================（2024.8.26~2024.8.30）本周工作主要内容：
一、代码分析与业务验证：
（1）分析 "立项审批" 相关的业务逻辑和需求。
（2）"立项申请"后续业务及代码的分析，担保信息采集>立项审批>租赁物采集>尽调审批准备。
（3）验证修改“立项信息”之后，“尽调业务”是否显示修改后的信息。
二、现场调研
（1）参与调研：客户现场确认"移动端审批"的样式展示。
三、代码修改和问题定位：
（1）解决原来“立项信息”修改后“还款方式”不能正确更新的问题。
（2）调整 "还款方式" 为自定义 "自定义还款计划" 时，隐藏 "还款周期" 的界面，并优化布局。
（3）解决，开发环境偶现read-only的问题
（4）移动端审批页面开发： 1.发“审批说明”和“意思类型”界面 2.项目详情页说明





//===============================（2024.9.2~2024.9.6）本周工作主要内容：
//===============================（2024.9.2~2024.9.6）本周工作主要内容：
一、业务分析
（1）分析"立项审批相关"业务逻辑
二、移动端审批页面开发
（1）移动审批，详情、历史、文档审批面板开发。
（2）调整页面样式，底部审批按扭”调整优化。
（3）增加app逻辑，根据审批类型进入不同的vue组件，目前仅“立项审批”，增加“正在加载”的动画效果。
三、接口调用调式
（1）调用后台接口、详情、审批历史、文档、审批操作接口




//===============================（2024.9.9~2024.9.14）本周工作主要内容：
//===============================（2024.9.9~2024.9.14）本周工作主要内容：
一、业务分析
（1）分析"审批操作"的接口和业务逻辑，以及 "不同类型操作" 的具体流程。
（2）分析数据提交前的数据校验逻辑。
二、接口调用与app代码开发
（1）app“文档显示”页标题层级显示。
（2）接口调用： needOperated 是否需要审批人员
（3）接口调用： "获取审批人员" 接口详情
（4）界面开发：审批人员展示页面和选择，审批人员上滑翻页。
（5）问题解决：解决app窗口滚动问题
（6）调试接口：最终审批提交，submitApprove，完成"同意-提交"、"退回-提交"、"否决-提交"。
（7）提交后的："界面展示"和页面的跳转。
（8）调试接口："是否需要文档校验"接口调试和相关逻辑。
三、下周计划
（1）后台免登陆的开发。



//===============================（2024.9.2~2024.9.6）本周工作主要内容：
//===============================（2024.9.2~2024.9.6）本周工作主要内容：

一、业务分析和技术准备
（1）分析和设计“免登陆”的完整流程。
二、代码编写
（1）代码编写：web-app添加路由守卫，"第三方或短信的请求路由" 使用公钥验证，得到真实请求地址。
（2）代码编写：wap-app添加 "axios的拦截器" 处理，对免登陆的 "请求体" 的数据加密处理（100%完成）
（3）代码编写：后台网关改造，当请求的URL是以'////'结束时， 这个请求被视为免登陆请求，不进行token校验，而对 "请求体" 数据通过私钥解密，并重新设置 请求体，且不校验TOKEN（70%完成）


//===============================（2024.9.23~2024.9.27）本周工作主要内容：
//===============================（2024.9.23~2024.9.27）本周工作主要内容：
一、代码开发
（1）后台网关服务改造：当请求的URL是以'////'结束时，解密请求头数据，并重新设置请求数据
（2）仅对"审批提交"进行"请求体数据"加密——解密处理，其它请求审批详情、历史、文档不加密但免登陆，并追加opNo字体到请求头。
（3）app 直接访问界面优化：通过 "审批页面" 访问时 隐藏 "返回箭头" ；通过 "审批页面" 访问提交成功后，跳转空白面页面（集成wps后进行交互的入口）。
（4）地址生成：在 "担保信息采集之后的一下步操作" 生成 "第三方访问的完整地址"；生成 "每次提交" 时 "向下一审批人" 发送的 "访问地地址"。
二、问题解决：
（1）解决"网关到业务服务超时时间"设置太长，导致 "使用已失效连接" 的问题
三、wps对接
（1）分析、梳理对接详细流程，以及需要的资料以及配合人员（100%）。
（2）编写向WPS发消息的示例代码（100%）。

//===============================（2024.9.29~2024.9.30）本周工作主要内容：
//===============================（2024.9.29~2024.9.30）本周工作主要内容：

一、代码开发
（1）"wps协作对接"：集成wps示例代码，补充"审批内容"和"目标审批人'手机号码查询"。
（2）"wps协作对接"：在wps程序内部打开网页。
（3）当 "多人可以同时审批" 一个任务，其中一人已处理时：另外人点击后跳转提示页面。
一、测试验证
（1）wps协作聊天内部 "打开连接" 白名单测试和验证。
（2）wps桌面版显示优化。





//===============================（2024.10.08~2024.10.12）本周工作主要内容：
//===============================（2024.10.08~2024.10.12）本周工作主要内容：


一、代码开发
（1）wps编码：“选择审批人界面、审批意见界面”在宽屏（桌面版）时控制宽度，并增加左右边线保证不与背景色冲突。
（2）wps编码：通过wps中的消息审批后，修改“消息卡片”的信息。
（3）wps编码：当"通过 web系统审批"时，"wps已收到的消息"同样会进行状态更新。
二、代码、部署、测试、文档
（1）rk_app上库。
（2）测试rk_app生产环境打包功能、在测试环境“首次上线”rk_app代码，配置nginx，同时升级网关和租赁服务。
（3）wps在测试环境，测试金控移动审批功能。
（4）wps编写《金控移动审批说明文档》文档。
三、金控移动审批-移动端“在线预览”
技术准备，了解wps在线预览，相关技术准备，梳理它的逻辑和原理。



//===============================（2024.10.14~2024.10.18）本周工作主要内容：
//===============================（2024.10.14~2024.10.18）本周工作主要内容：

周一：
（1）梳理了 “wps-文档-在线预览” 相关逻辑和流程，并验证“web端已有的wps-文档”在线预览功能在移动端的的显示效果。
（2）开始开发 “移动端-wps-文档-在线预览” 代码 10%

周二：
（1）解决 doc 在本地运行的问题。
（2）移动端-审批-在线预览 ，前端页面开发调试，验证ppt、doc在移动端的效果80%

周三：
（1）优化标题居中显示 100%。
（2）解决IP占用问题 ,wps-协作-桌面端-“wps-文档-预览”优化。

周四：
（1）wps短信发送的地址 100%
（2）签名、加密密钥修改为可配置 100%

周五：
（1）“尽调审批”业务分析。
（2）准备“尽调审批”开发步骤和计划。


//===============================（2024.10.21~2024.10.25）本周工作主要内容：
//===============================（2024.10.21~2024.10.25）本周工作主要内容：


一、公共组件提取
	（1）app前端公共组件提取：审批历史、加载中效果、
	（2）文档列表、文档预览、意见操作栏、
	（3）选择审批人、意见面板提取公共组件，
	（4）详情列表组件、主组件 样式提取为公共组件
	（5）协助同事搭建环境和业务讲解。

三、下周计划
	计划完成 “移动端尽调审批”功能。



//===============================（2024.10.28~2024.11.1） ：
//===============================（2024.10.28~2024.11.1） ：
一、公共代码提取
（1）添加新的公共组件 "回退节点选择"
（2）查询审批人和系统参数等函数，提取为 "公共函数"
（3）提取 app 最终的提交部分的js代码 为 "公共函数"。
二、尽调审批开发
（1）尽调审批：分析 "尽调审批" 功能API、和web代码。
（2）尽调审批：审批意见面板添加额外的提交字段。
（3）尽调审批：逻辑代码开发、提交功能
（4）尽调审批：A岗提交时“额外增加及修改提交的数据”,以及A岗之外的角色需要进行展示。



//===============================（2024.11.4~2024.11.8）本周工作主要内容:
//===============================（2024.11.4~2024.11.8）本周工作主要内容:
（1）移动端审批：增加 "要件展示" 和 "文件上传" 的公共组件。
（2）尽调审批："测试和验证" 移动端的 "审批效果" 与 web端进行数据对比。
（3）尽调审批-A 岗位：提交时，增加参数验证。 所有岗位回退时，目标节点也是必选。
（4）尽调审批-风控经理"：增加额外的字段，根据条件显示“要件资料上传”.
（5）后端根据 "不同类型的审批流" 自动生成 "发送消息的地址中路由" 。
（6）后端优化通用发送消息的代码。
（7）移动端审批操作：增加了 "退主流程"查询接口。



//===============================（2024.11.11~2024.11.15）本周工作主要内容:
//===============================（2024.11.11~2024.11.15）本周工作主要内容:


（1）"公共组件"，增加"評委选择公共组件"。
（2）"公共组件" 委贷与租赁 的文档标签差异处理。

（3）"委贷-业务审批" app端-页面开发。
（4）"委贷-业务审批" 风控经理上传评审会纪要——选择“内部-外部”评委。

（5）"委贷-业务审批" 后台短信发送处理。
（6）"委贷-支付审批" app端-页面开发。

（7）"委贷-支付审批" 后台短信发送处理。

（8）"委贷-合同审批" app端-页面开发。



//===============================（2024.11.18~2024.11.22）本周工作主要内容:
//===============================（2024.11.18~2024.11.22）本周工作主要内容:
（1）"委贷-合同审批"  	  100%（完成）
（2）"委贷-提前还款审批"  100%（完成）
（3）部署-测试环境 和功能交接。
（4）功能测试验证和准备生产上线。
（5）wps:免登陆优化，免登陆的访问向redis添加 opNo 编号。
（6）优化操作成功后跳转提示页面。



//===============================（2024.11.25~2024.11.29）本周工作主要内容:
//===============================（2024.11.25~2024.11.29）本周工作主要内容:


（1）rk_app：准生产环境：测试验证。
（2）rk_app开发：增加审批后的详情查看功能开发及验证、参与后端部署上线。
（3）rk_app生产上线：生产环境白名单配置、https配置准备、修改niginx的配置、nacos提前修改配置。
（4）rk_app移动审批页优化，长文本显示优化、用户提交后不显示底部操作栏防止重复操作。
（5）sql审核：学习了解Archery。



//===============================（2024.12.2~2024.12.6）本周工作主要内容:
//===============================（2024.12.2~2024.12.6）本周工作主要内容:


（1） 技术准备  docker、docker compose、Goinception、Django
（2） 在本地运行 Archery 官方镜像，部署运行环境（100%）。
（3） 了解Archery 系统的主要模块和功能。
（4） 了解Archery系统配置： 数据实例————资源组、 权限组————用户。
（5） 了解Archery系统Goinception配置、 SQL上线、 SQL查询、SQL优化。


//===============================（2024.12.9~2024.12.13）本周工作主要内容:
//===============================（2024.12.9~2024.12.13）本周工作主要内容:
（1）了解 "SQL上线详细的业务流程": 工单填写>SQL检测>提交>审批>自动执行 的详细流程和操作。
（2）docker部署：使用Archery源码生成docker镜像并成功运行项目100%。
（3）非docker部署: 使用非docker方式部署环境，在新机器安装mysql、redirs、nginx、升级ssl和安装python，安装virtualenv、安装Archery、安装Archery项目依赖、项目配置，并成功部署，确保docker部署与非docker部署都能运行（100%）。
（4）非docker部署: 审查目标数据中间件依赖————golang、GoInception安装与测试，并配置开机启动。
（5）在测试环境验证功能，梳理流程。

//===============================（2024.12.16~2024.12.20）本周工作主要内容:
//===============================（2024.12.16~2024.12.20）本周工作主要内容:

（1）测试"SQL分析"功能——安装 SOAR（msyql）验证SQL分析功能。
（2）将Archery的甩有"权限资源"梳理，并找到对应的功能，授权测试。
（3）功能分析：梳理 Archery 功能清单，并列出 "重点需要集成的功能"
（4）对测试Archery提供的接口分析和测试。
（5）详细了解及 GoInception 使用和审核规则

//===============================（2024.12.23~2024.12.27）本周工作主要内容:
//===============================（2024.12.23~2024.12.27）本周工作主要内容:

（1）了解GoInception底层依赖：了解TiDB语法解析器。
（2）了解pawsql平台-非开源，尝试使用 pawsql 的部分功能。
（3）了解sqle-社区版本-开源，尝试使用其中的主工功能。

//===============================（12.30-1.3）
//===============================（12.30-1.3）

（1）SQL审核概要和详细设计
（2）制定开发计划
（3）开始搭建本地环境（发现了项目初始循环依赖的问题）




//=============================== 1.6-1.10 工作内容
//=============================== 1.6-1.10 工作内容

（1）搭建开发环境，创建新的 rkzl-sqlaudit 模块，配置并验证基础功能。
（2）根据 DDD模型软件开发方法 完成 rkzl-sqlaudit 的内部聚合划分。
（3）整合业务需求：吴生龙那边的TDSQL和DM的审核规则。
（4）基础公共功能开发：参数校验、异步统一处理、集成mybatis-plus、数据库事务配置以及这些功能的验证。
（5）功能开发：审核参数管理——建表、查询、更新。




//=============================== 1.13-1.17 工作内容
//=============================== 1.13-1.17 工作内容
（1）功能开发：审核参数管理——列表接口，分页查询，集成 Caffeine 代码 
（2）功能开发: "审核规则" 接口：列表、详情、增加、更新、删除。
（3）功能开发: "审核规则模板" 接口：详情-模板、详情-模板中的类型、添加、删除、更新、列表规则等。
（4）jdbc与驱动关联梳理，td-sql、dm 、mysql、oarcle驱动确认，桥接模式准备。


//=============================== 1.20-1.24 工作内容
//=============================== 1.20-1.24 工作内容

（1）功能开发: 资源组——列表、详情、增加、删除、更新接口。
（2）功能开发: 数据源——增加、详情、删除、列表、更新等接口。
（3）功能开发： "数据连通性" 测试接口 开发，完成 td-sql、dm 、mysql、oarcle 连接测试接口。
（4）功能开发：“SQL上线” 基础流程逻辑代码编写。
（5）SQL解析器：Apache Calcite 技术准备，了解SQL解析和工具扩展实现。




//=============================== 1.26-1.27 工作内容
//=============================== 1.26-1.27 工作内容

（1）集成SQL解析器————Apache Calcite。

//=============================== 2.5-2.8 工作内容
//=============================== 2.5-2.8 工作内容
（1）集成SQL解析器————Apache Calcite。
（2）"内置规则" 审核逻辑流程代码编写和测试，并完成 4 个简单的审核规则。
（3）审核结果设计和审核结果详情，设计代码开发。
（4）添加SQL格式化接口。
（5）"审核规则" 前 对SQL进行校验，并配置开关。

//=============================== 2.10-2.14 工作内容
//=============================== 2.10-2.14 工作内容

2.10-2.14 后端开发
（1）审核规则——多表关联查询join表数量审核
（2）审核规则——select子查询数量审核
（3）审核规则——select嵌套层数审核
（4）接口编写：通过资源组ID——查询数据源详细信息。 
（5）接口编写：通过数据源ID查询数据数据库或SCHAME列表（mysql、oracle、td-sql、dm）


【2.17-2.21 工作内容】
（1）自动任务扫描审核、配置管理任务设计。
（2）添加任务管理接口：添加、删除、详情、列表。
（3）任务结果分析设计。
（4）日志采集设功能设计和分析




【2.24-2.28 工作内容】
（1）审核接口改造为批量审核接口。
（2）mysql日志中sql采集和审核流程代码编写
（3）mysql日志解析代码编写（100%）
（4）接口：根据 "任务名" 查看 "执行结果" 列表表
（5）接口：根据 "执行结果" 查看 扫描到的sql列表







（1） 2025年3月2日   ： tdsql  sql_instance_类日志解析，（5小时）



 
【3.3-3.7 工作内容】
（1）tdsql 日志的SQL采集、增量采集 100% 			 
（2）增加任务暂停和恢复的接口						 
（3）优化 审核规则 "避免使用NULL关键字"  			 
（4）Oracle 和DM sql采集 100%
（5）审核流程优化，解析失败时也会记录审核结果信息（等优化）。
 
【3.10-3.14 工作内容】                                     
（1）自定义审核规则： 维度、维度选项、级联关系 分析设计。  
（2）自定义审核规则：代码生成逻辑编写。  					 
（3） linux调试自定义审核规则， 							 

（4）完成审核规则：避免使用count(*)
 
【3.17-3.21 工作内容】
（1）梳理TD-SQL、DM所有的审核规则的场景和分类。
（2）增加任务分类，区分动态与静态审核。
//"静态类审核"，在无SQL情况下可以进行配置检查和对已经存在对象进行审核。
（3）完成审核规则
动态审核：
1.避免使用or查询
2.避免使用 having 子句
3.限制 IN 和 NOT IN 元素个数
4.表名前端审核
静态审核规则：
1.InnoDB 数据库引擎检查//mysql、td-sql
4.数据库已存在的表名前端审核
梳理了Oracle的所有规则，并分类 。




 

【3.24-3.28 工作内容】
（1）仪表盘接口开发、联调、测试
（2）通用审核规则： Select不能没有where（扩展已有实现）
（3）通用审核规则： 避免左模糊匹配（扩展已有实现） 
（4）梳理分析：工单、用户、角色、权限、审批流等业务。
（5）接口开发：SQL审核业务角色列表、角色分配用户、资源组分配用户。



批流程
 
【3.31-4.3 工作内容】
 
（1）功能接口设计开发：创建工单、工单列表、工单详细
（2）功能接口设计开发：审批工单、中止工单、执行工单、审批历史
（3）提交、审批、执行工单加入对应的权限限制。
（4）权限：权限列表、给角色分配权限、查询角色中权限详情
（5）角色：添加、删除、修改、详情
（6）审批流程：添加审批流、更新审批流
（7）根据业务梳理具体权限值，并初始化。

 
【4.7-4.11 工作内容】

（1）POC文档编写
（2）功能汇总与部分测试验证
（3）增加ob-mysql和ob-oracle数据库类型，
	 涉及改动点初始算法、参数、数据源支持、
	 SQL上线支持、动态任务支持、静态任务支持、工单执行支持。
（4）完成统计报表-汇总统计、SQL审核详情报表接口
（5）协助POC环境的测试。

 

周报【4.14~4.18】
（1）集成 flyway 库，并完成测试。
（2）解决问题：统计报表、规则管理分页问题部分规则修改、告警等级等 15+ 问题修改。
（3）工单审批结束时，向 "创建者" 发送消息 执行sql测试。
（4）现场演示准备、现场演示。
（5）"基线审核" 需求分析、需求分类、设计。

 

周报【4.21~4.25】
（1）完成：基线审核开发-完成一条基线规则，
（2）基线-审核流程开发-涉及改动点初始算法、添加基线技术明细要求、目标对象、基线任务、  仪表盘、报表汇总等。
（3）SQL审核需求分析、过滤、确认。
（4）SQL优化建议功能开发，在sql提交、任务、报表明细中给出SQL优化建议

 
周报【4.28~4.30】
（1）SQL去参数化：原始SQL记录功能及SQL去参数化功能开发，提供查询接口
（2）业务分析、设计 ：6.20 基线审核业务分析梳理。
（3）平台层 6.20 基线审核流程优化：
	1）. 基线审核条目加入启用/禁用状态。
	2）. 创建策略时，如果是基线策略，默认会添加所有 "基线要求"。
 

（1）基线审核：windwos 脚本流程调试与优化。 linux 脚本流程调试与优化。
（2）基线审核：配合前端联调。
（3）增报表：规则、目标对象维度的 违反次数统计 30%。

 

周报【5.12~5.16】
（1）审核报告-静态文件html梳理、准备模板、内容设计
（2）加入基线后现有功能测试和优化：	
	1）. SQL建议功能BUG修复。
	2）. 汇总统计：展示字段优化
	3）. 审核结果明细：违反规则详情通过子列表展示，增加子列表查询接口
	4）. 仪表盘增加新的规则数量数据。
	5）. 测试界面相关功能和改动。 
	6）. 整体的业务流程和逻辑测试验证
	7）. 给"审核策略"、"目标对象"等表添加 "审核类型"字段，提升查询和统计效率


周一： +2 小时
周四： +3 小时
周六： +5 小时
 
周报【5.19~5.23】
（1）本同主要完成了报告：概览 数据设计，并提供查询接口填充
（2）报告：汇总 数据设计和填充、违反规则分布数据与填充。
（3）报告：TOP10 数据提供接口，完成填充。
（4）报告：提供报告下载接口。


周一：+ 2.5
周二：+ 2
周三：+ 2.5

 
周报【5.26~5.30】
（1）快速审核开发后端功能开发 100% 。
（2）基线审核-结果展示优化，统计和报告中展示详细的基线要求。
（3）审核结果统计优化。
（4）基线审核脚本验证、协调、脚本收集。
（5）梳理前端 功能模开关、让其在打包时编译为不同安装环境安装包，便于灵活配置


周一： + 2
周四： + 1
周六： + 4





支持多数据库（TDSQL、Oracle、DM、OB）的 SQL 审核与采集体系
自研工单 + 权限 + 审批流程系统，灵活配置权限控制
审核统计系统全面上线，支持汇总、明细、TOP榜、静态报告下载
建立基线审核功能体系，包含策略、任务、报表、脚本、前后联调
多次优化功能性能和用户体验，提升系统稳定性与灵活性
 

//========================================================（重庆银行 st4 ）和（沁渝金融）
//========================================================（重庆银行 st4 ）和（沁渝金融）

【6.3~6.6】
（1）收集脚本、对齐、初始化脚本数据
（2）模板样式优化、BUG（基线审核策略创建时未指定的规则在修改时无法展示的问题）修复。
（3）测试和验证前端的界面调整。
（4）基线审核并发优化，加入多线程执行脚本。
（5）审核逻辑：反射优化，反射产生的bean对象也交由spring管理。
（6）环境部署分离开发（10%完成）




周三： 2 小时
周四： 1 小时




//========================================================（重庆银行 st5 ）和（沁渝金融）
//========================================================（重庆银行 st5 ）和（沁渝金融）

上周五：3 小时
上周六: + 4
上周六: + 2:40


周报【6.9~6.13】
（1）完成后端 "部署分离" 涉及仪表盘、参数配置、对象管理等模块。
（2）前端加入环境切换功能开发：涉及仪表盘、参数配置、对象管理、
	 人工|快速|自动任务扫描审核、配置管理任务，统计报等模块
（3）测试验证基础功能，优化了"报告页"在系统中展示时，左右上下滚动的问题，让报告页和系统看上去是一体的。



//========================================================（重庆银行）和（沁渝金融 st1）
//========================================================（重庆银行）和（沁渝金融 st1）


周报【6.16~6.20】
（1）优化：基线审核的展示效果展示为子表格。
（2）基线脚本初始数据优化，规则名称和描述优化，linux基线参数检查。
（3）动态调整仪表盘页面，调整菜单顺序。
（4）增加根据任务结果生成报告的预览接口和下载接口。
（5）基线审核，编辑功能优化
（6）增加 "修改规则" 的 "告警等级" 的功能。




//========================================================（重庆银行）和（沁渝金融 st2）
//========================================================（重庆银行）和（沁渝金融 st2）

周报【6.23~6.27】
（1）测试部署验证测试：
	 1）前端：	登陆页面标题
	 2）前端：	控制台页面标题
	 3）后端：	默认数据，不需显示 "对象"。快速审核组名数据，显示为 "快速审核" 组名，不是显示内置。
	 4）后端：	报告中有数组显示的 "数据有问题"，正常的那个表示范围。
	 5）后端：	只有基线审核的时候："报告中不显示得分"。

（2）部署 "鈊渝金融" 生产环境和测试。





//========================================================（重庆银行）和（沁渝金融 st3）
//========================================================（重庆银行）和（沁渝金融 st3）

【 6.30~7.4号 】
（1）重庆银行环境部署
（2）鈊渝环境测试
（3）鈊渝环境测试
（4）重庆银现场部署
（5）鈊渝环境测试



//========================================================（重庆银行）和（沁渝金融 st4）
//========================================================（重庆银行）和（沁渝金融 st4）

【 7.7~7.11号 】



（1）7月改动梳理
（2）"动态+静态" 审核合并为数据库审核，将 "一个审核目标" 可以拥有 "多个审核策略（不同子类型）"
（3）代码开发，合并 "动态+静态" 数据库审核，其余为基线审核。



//========================================================（重庆银行）和（沁渝金融 st5）
//========================================================（重庆银行）和（沁渝金融 st5）
【 7.14~7.18号 】
（1）代码开发：涉及 审核参数：规则管理，审核策略，新逻辑流程优化。
（2）代码开发：涉及 对象组 目标对象。
（3）远程支持重庆生产环境问题定位。
（4）代码开发：涉及 SQL上线、工单管理。
（5）代码开发：任务管理，新逻辑流程优化。


【 7.21~7.25号 】
（1）代码开发：统计报告、快速审核、审计、报告。
（2）前端代码：新的业务逻辑改动。
（3）出差：重庆银行TDSQL数据库采集问题处理。
（4）出差：沁渝"生产环境"问题定位。
（5）出差：重重庆银行 "测试环境"  基础功能测试验证。


//========================================================（重庆银行st5）和（沁渝金融 st6 这个）
//========================================================（重庆银行st5）和（沁渝金融 st6 这个）


【 7.28~8.1号 】
（1）使用三维嵌套对象优化前端开关配置。
（2）前端新逻辑编码：重构了“审核策略”的配置流程，
	 现在可以在创建"基线策略"时直接启用基线要求并填写参数。涉及前后代码和接口改动。
（3）重构了“审核策略” 的配置流程。
（4）前端新逻辑编码：重构了“对象管理”的配置流程，现在每个审核对象可以配置多个审核策略。


//========================================================（内部项目）和（内部项目 ）
//========================================================（内部项目）和（内部项目 ）


【 8.4 ~ 8.8 】
（1）数据配置对比功能分析设计 
（2）完成列表页面和创建对比的页面呈现。 
（3）实现比较算法。
（4）


周一： + 2
周三： + 2

周四： +1 

//========================================================（重庆银行st5）（沁渝金融 st7 ）、（贵阳st1 这个）
//========================================================（重庆银行st5）（沁渝金融 st7 ）、（贵阳st1 这个）

【 8.11 ~ 8.15 】
周一："上传列表重复出现文件名" 处理，列表中不能重复出现。
周二：限制：文件只能来自 "同一机器"。
周二：对比表格增加折叠的功能，默认全部选中
周二：根据选择的对比项，还展示或隐藏表格、以及列。
周二：解决大文件渲染的问题，增加延迟渲染

周二：对比数据的保存
周二：对比报告内容设置，报告功能开发

自动 采集接口，前部分编写



//========================================================（重庆银行st5）（沁渝金融 st7 ）、（贵阳st2 这个）
//========================================================（重庆银行st5）（沁渝金融 st7 ）、（贵阳st2 这个）

周一：贵阳出差：对比功能——自动采集后端开发测试。
周一：贵阳出差：现场部署 "对比功能"
周一：贵阳出差：现场测试、验证、基本功能 "对比功能"
周一：贵阳出差：增加用户过滤功能，以及大量性能优化
周一：贵阳出差：优化操作流程，让操作更简单
周一：贵阳出差：优化后台逻辑，将对比功能移动到JAVA端，前端仅呈现，让其支持异步处理，并且能关闭浏览器



//========================================================（重庆银行st5）（沁渝金融 st7 ）、（贵阳st3 这个）
//========================================================（重庆银行st5）（沁渝金融 st7 ）、（贵阳st3 这个）

贵阳出差：部署演示优化
贵阳出差：对比算法优化，呈现优化
贵阳出差：优化对比呈现优化调整
贵阳出差：优化对比呈现优化调整
贵阳出差：优化对比呈现优化调整


//========================================================
//========================================================

周一： + 3
周二： + 2
周二： + 2
周二： + 1.5


//========================================================（1）
//========================================================（1）

贵阳出差：达梦、高斯、人大金仓、




