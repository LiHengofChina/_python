
//============================================ 目标检测原理
//============================================ 目标检测原理
目标检测的两大系列：
		（1）	 RCNN:	基于 "区域检测" 的代表性算法 //两阶段
		（2）YOLO系列： 基于 "区域提取" 的代表性算法 //一阶段
		 //======其它
		 SSD是基于前两个系列的改进。

//============================================== 两大系列 都会产生候选区
//============================================== 两大系列 都会产生候选区
//==================（1）候选区域产生
//==================（1）候选区域产生
"候选框(bounding boxes)"产生的主要方法：
				"图像分割技术"：
				"区域生长技术"：由检测图像中存在的物体具有局部区域相似性（颜色、纹理等）
							（1）滑动窗口//最早的方式，效率低，现在几乎不用了。
										 //使用大小不同的框子滑动整个图，剪切整个成小图，
										 //然后进行分类。
										 //实现简单，使用两for循环，就能产生很多候选区。
										 //这种方式效率比较低（大部分区域是没有物体的）。
							（2）选择性搜索（selective search）
										 //图像中的特性具有 "某些相似性" 或 "连续性区域"
										 //（1）首先对输入图像进行分割，产生小区域
										 //（2）根据子区域之间相似性进行合并
										 //（颜色相似性、纹理相似性、大小相似性、以及物体和物体之前的填充关系 ）
										 //小的候选区适合检测小物体，大的候选区适合检测大物体

										 //效率比 "滑动窗口" 高一些
										 //可以包含各种大小的物体

 
//========================================================================================================================= 向量表示
//========================================================================================================================= 向量表示

 

/**
	Pc 	表示：有目标物体的置信度

	B_x 表示：定位框x
	B_y 表示：定位框y
	B_w 表示：定位框w
	B_h 表示：定位框h
			//输出层有4个神经元，结果就会有4个值，也就是：x、y、w、h

	C_1 表示：分类信息——是1的概率
	C_2 表示：分类信息——是1的概率
	C_3 表示：分类信息——是1的概率

*/

Y	 	=  [ Pc    B_x    B_y     B_w     B_h     C_1       C_2      C_3]
																     
																     
Y_true 	=  [ 1     40     45      80      60      0         1        0]
																     
																     
Y_pred  =  [ 0.88  41     46      82      59      0.01      0.95     0.04]




//===========================================================================
//===========================================================================

使用  Pc 判断这个地方是否有物体

把    B_x    	B_y       B_w     B_h   构建成回归问题的损失函数

把    C_1       C_2      C_3 			构建成分类问题的损失函数

把上面使用均方差
把下面使用交叉熵


把这两部分合在一起作为整个损失函数进行优化

最终输出8个值

	Pc 作为置信度
	B_x B_y B_w B_h 	作为定位信息
	C_1 C_2 C_3			作为分类信息

//========================================================================================================================= 张量表示
//========================================================================================================================= 张量表示

深度学习并不是在原图上进行处理，要先进行 "卷积"，
		卷积之后得到小很多的图，
		卷积之后的图的一个像素（里面是特征值）就可以表示原来图的一个区域（也就是感受野）

		TODO，使用高维度张量表示。

		//直接预测出一个 "高维度的张量"





