

//======================================= 张量
//======================================= 张量

Tensor ：多维数组或向量，张量是数据的载体，
		 包括名字、形状、数据类型等等属性

		//张量：每一个张量都有自己的名字的。
	没有其它数据类型，只有张量


//======================================= 数据流
//======================================= 数据流

数据流图：用 "节点" 和 "线"来描述数学计算

节点 ：一般用来表示数据操作。

线：表示 "节点"之间的输入输出

一量输入端的所有系统架构准备好了，节点将被 分配到各种上计算设备完成 异步并行执行运行。


//===== 这个图方便对代码和计算进行理解的


//======================================= 操作
//======================================= 操作

操作：指专门执行计算的节点，tensorflow函数 或 API定义的都是操作，常用操作包括：

	- 标题运算，向量运算，矩阵运行
	- 带状态的运算
	- 神经网络组建
	- 存储、恢复
	- 控制流
	- 队列及同步运算

	//定义当中的内容都属于操作。 tf. 什么的，都 是 "操作"


//======================================= 图
//======================================= 图

怎么程序 结构

抽你概念
"定义部分" 可以看成一个图，可以看成一个大的容器，里面都是 "操作"，存放了所有的操作

//======== 说明1：这里执行是正常的
x = tf.constant(100.0)
y = tf.constant(200.0)
res  = tf.add(x,y)
graph = tf.get_default_graph() 
	#默认的图，上面定义的都 在默认的图上面
tf.Session(graph = graph) 

//======== 说明2：#此时执行会报错
x = tf.constant(100.0)
y = tf.constant(200.0)
res  = tf.add(x,y)
new_graph= tf.Graph()#新图
tf.Session(graph = new_graph) 




//======================================= 会话
//======================================= 会话

用来  "执行图" 的运算
	//所有的 操作都 在图里面

	执行 图 中的运算



//======================================= 变量
//======================================= 变量

变量在 Tensorflow中，变量是一种操作，
变量一种特殊的 "张量"，能够进行存储持久化，它的值是张量
张量不能进行持久化。

w = tf.constant(100)#张量  # 普通数据

w = tf.Variable(100)#变量  # 可以保存到文件，#主要模型参数，可以持久化


//======================================= 占位符
//======================================= 占位符

占位符 是变量的占位符号，
当不能确定变量值时，可以先声明一个占位符号，真正执行时再传入变量。
类似形参

sm.accuracy(占位符)
model.
