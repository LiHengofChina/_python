



//========================================================================================= 图解反向传播过程
//========================================================================================= 图解反向传播过程



//============================================================= 场景一
//============================================================= 场景一

//正向计算
在超市买了 "2个苹果"，每个10元，消费税10%，请计算应该支付的金额

		10  *  2  *  1.1  = 22元

		影响因素 - （苹果个数）： 10 * 2 = 20 

		影响因素 -   （消费税）： 20 * 1.1 = 22



//反向计算
在超市买了 "2个苹果"，每个10元，消费税10%，
请计算 "苹果价格上涨" 会在多大程度上 "影响支付金额"（即求: "支付金额" 关于 "苹果的价格" 的导数"）

		/** GPT的回答：
				//============================================= 第一步：分析问题
				导数表示 "函数" 在 "某一点" 上的 "变化率" ，
				也可以理解为 "函数值" 对 "自变量的变化" 的 "响应"。
				
				要求 "苹果价格上涨" 会多大程序上 "影响支付金额"
				也就是 "支付金额" 在 "苹果价格" 上的 "变化率"。
				也就是 "支付金额" 对 "苹果价格" 的 "变化率"。
				也就是 "支付金额" 关于 "苹果的价格" 的导数
				也就是 "支付金额" 关于 "苹果的价格" 的影响（率）（程度）
				也就是 当 "苹果的价格稍微上涨" 时， "支付金额会增加多少"。

				//============================================= 第二步：用公式表示
				（1）设  X 为苹果的价格，
						 Y 为购买的苹果数量，
						 T 为消费税率，
						 L 为支付金额。

				（2）则：
					 L=(X×Y)+(X×Y×T)
					 //其中 (X×Y) 为苹果的总价格
					 //其中 (X×Y×T) 为消费税

				（3）合并同类项，
					 L = X × Y ×( 1 + T )

				//============================================= 第三步：明确问题
				"支付金额" 关于 "苹果的价格" 的导数，
				即L 关于X的的导数
				∂L / ∂X =  Y ×( 1 + T )

				说明：
					苹果的价格： "每增加一个单位"， 支付金额增加增加： Y ×( 1 + T )

					 这个 "导数的值" 表示当 "苹果的价格稍微上涨" 时， "支付金额会增加多少"。
					 如： 苹果价格增长1，支付金额增加2.2。	 // 2 * (1+0.1)  ，
															 // 则总金额变成 ：11*2*1.1=24.2，比原来的22多了2.2
					 如： 苹果价格增长3，支付金额增加2.2 *3。// 2 * (1+0.1) * 3 //因为上涨了3个单位。
															 // 则总金额变成 ：13*2*1.1=28.6，比原来的22多了6.6


				结论：
					在这个问题中，"苹果价格上涨" 会在 "支付金额" 上产生的影响程度由 "购买的苹果数量"、 "消费税率"决定。
				//========================================== 其它
				∂L / ∂X  
				∂L / ∂Y
				∂L / ∂T


		*/

		"苹果的价格稍微上涨" 时， "支付金额会增加多少"。

		所以： "支付金额" 是 "因变量X"，"苹果单价" 是 "自变量L"。

		所以要求的是 "苹果单价" 对 "支付金额" 的影响率，
		或者  "支付金额" 关于 "苹果单价" 的影响率
		求的是就是：  ∂L / ∂X   ，它是一个偏导（局部导数），
		因为除了 "苹果的单价"：
						还有 "消费税率" 	也会影响 "支付金额"
						还有 "个数" 		也会影响 "支付金额"
						//还有 "苹果总价" 	也会影响 "支付金额"，它是隐藏层


						//另外 "苹果的总价" 也会 影响 "支付金额"
						"苹果的总价" 变成 21 ，也会影响 "支付金额" 21 + 2.1 =23.1，
									//20 * 2 = 20 ，这是苹果总价，
									//我直接修改了 "苹果总价" 为 21
									//而 "苹果总价" 相当于是 "隐藏层"。
									//======================
									"支付金额" 关于 "支付金额" 的导数是1，
									//"支付金额" 关于 自己的导数 是1。

		//====================================================== 举例说明： "苹果的单价" 变为 11
		"苹果的单价" 变成 11：（增加一个单位）
				支付金额 关于  苹果的单价 的导数是 2.2
				支付金额 关于  苹果的总价 的导数是 1.1
				支付金额 关于  支付金额 的导数是 1
		//====================================================== 举例说明： "消费税" 变为 2.1
		"消费税" 变成    2.1：（增加一个单位）
				支付金额 关于  消费税 的导数是 20
		//====================================================== 举例说明： "个数" 由2个变为 3个
		"个数" 变成        3：（增加一个单位）
				支付金额 关于  个数 的导数是 11

		//=============================================（汇总一下）
				支付金额 关于  苹果的单价 的导数是 2.2
				//支付金额 关于  苹果的总价 的导数是 1.1  （这是隐藏层）
				支付金额 关于  个数		  的导数是 11
				支付金额 关于  消费税 	  的导数是 20
				//支付金额 关于  支付金额   的导数是 1	  （这是它自己）

		//============================================= 理解
		可以理解为：苹果价格、苹果个数、消费税增加 "相同的值"：
					分别对支付金额产生 2.2 倍、 11 倍、 20 倍的影响

		//============================================================================================= 反向传播
		//============================================================================================= 反向传播
		从 "个数"  求  "支付金额" 是 "正向传播" 求 "金额" 可以正向去求，
		"反向传播" 是 "从输出到输入"。

							/*** （重点）
								//=========================== 求金额
								用 "正向传播" ，为什么要求 "金额"，因为要预测值嘛

								//=========================== 求导数
								用 "反向传播" ，为什么要求 "导数"，因为要用损失函数，进行梯度下降。
							*/

		//============================================================================================= 反向传播
		//============================================================================================= 反向传播
		考虑函数 y = f(x) ，输出为E， //这就是前面说的函数，正向的求值的过程
		"反向传播" 的 "计算顺序"是：
							将 "信号E" 乘以 "节点的局部导数（偏导数）"，
							传递给 "前面的节点"，这样可以 "高效地求出导数的值"。


		//============================== 
		"反向传播" 是 "从输出到输入"。
		"输出层的导数" 是可以算出来的，也就是E，
		"输出层根据'误差算出来的E'"  *   ∂L / ∂X		 
						//===================================== （重点）
						/**
							为什么可以算出来，因为 "输出层" 是有 "误差的"
							前面说的  "支付金额 关于  支付金额   的导数是 1"

							前面过程中 "已经计算出了导数"，是通过 "正向代数的方式" 算出来的（方式一）。

							通过 "反向传播" 机制也能算出来（方式二：）
								//==================================================================================================================================================================
								（1）"支付金额" 关于  "支付金额"   的导数是 1
									  它是输出层，所以先算它。

								（2）"后面这一层是上游" "前面这一层是下游"
								  
								  
								  //==================================================================================================================== 乘法：
									  在原式子中，"倒数第二层" 是： 
									  "苹果的总价（一条边）" * "消费税（另一条边）"  =  "支付金额"，
									  它是乘法运算

								（3）乘法："上游信号"  传递给 "下游信号" ，乘以 "另一条边的值（消费税）" （参考图）

										信号E就是指：因变量的导数值。

										//  "上游的信号"  就是指  "上游的导数"

										//=========================================== 倒数第一层
										"苹果的总价（一条边）20"   *  "消费税（另一条边）1.1"  = "支付金额 22"  

										所以： "支付金额22的导数1"  这里的导数 "往下游传"，
											   要传给 "苹果的总价（一条边）20" 和  "消费税（另一条边）1.1"， "这两条边"

											   传过去之后 ： 
														（1）求："支付金额" 关于 "苹果总价" 的导数：
																	"总金额 22的导数1" * "消费税（另一条边）1.1"  =  "支付金额 关于  苹果的总价 导数 1.1"


														（2）求："支付金额" 关于"消费税" 的导数：
																	"总金额 22的导数1" * "苹果的总价（一条边）20" =  "支付金额 关于  消费税 导数 20"





										//=========================================== 倒数第二层

										"苹果单价10（一条边）"  *  "苹果数量（另一条边）2" =  "苹果的总价 20" 

										所以： "苹果的总价20 的导数是 1.1"  这里的导数 "往下游传"，		
											   要传给 "苹果单价（一条边）10" 和  "苹果数量（另一条边）2"， "这两条边"	

											   传过去之后 ： 
														（1）求："苹果的总价" 关于 "苹果单价" 的导数：
																	"苹果的总价20 的导数是 1.1"  *   "苹果数量（另一条边）2"   = "苹果的总价" 关于 "苹果单价" 的导数 2.2

														（2）求："苹果的总价" 关于 "苹果数量" 的导数：
																	"苹果的总价20 的导数是 1.1"  *   "苹果单价（一条边）10"   = "苹果的总价" 关于 "苹果数量" 的导数 11

										//======================================================================================= 乘法总结：

										//======================================= 正向传播
										x
													乘法———————>  z
										y


										//======================================= 反向计算
										∂L/∂z * y	//上游信号(z的偏导) * "y值"

													———————> ∂L/∂z   			//这是 "z的偏导"

										∂L/∂z * x	//上游信号(z的偏导) * "x值"

										//======================================================================================= 加法总结：

										//======================================= 正向传播
										x
													加法———————>  z
										y


										//======================================= 反向计算：将 "上流的值" 直接传给 "下游"
										∂L/∂z * y	//上游信号(z的偏导) * 1

													———————> ∂L/∂z   			//这是 "z的偏导"

										∂L/∂z * x	//上游信号(z的偏导) * 1


										 


						*/

		对乘法而言，当前边的 "偏导" ，就是另一条边的值。



		//==========================================================================举例说明：一个神经元
		//==========================================================================举例说明：一个神经元
		//======================================== 正向传播（求值）
		//======================================== 正向传播（求值）
		z = wx + b
		 （1）先算乘法： w 与 x 进行矩阵乘法得到y
		 （2）再处加法：y + b  = z

		//算子（操作）：mul 和 add
		//在 "反向传播" 中，加法 和 乘法 有一点不同。
		//======================================== 反向传播（求导数）
		//======================================== 反向传播（求导数）
		z = wx + b
		先求  "z的导数"
			//准确说：要求的是 "z关于w的导数" 和 "z关于b的导数"。






//============================================================= 场景二
//============================================================= 场景二

在超市买了 "2个苹果" 每个10元 ， "3个橙子" 每个15元，消费税10%，请计算应该支付的金额


		(  10*2    + 15*3  ) * 1.1  = 22元



		影响因素 - （苹果个数）： 10 * 2 = 20

		影响因素 - （橙子个数）： 15 * 3 = 45

		影响因素 -   （消费税）： (20+45) * 1.1 = 71.5


