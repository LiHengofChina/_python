

 （1）线性模型

//============================================= 线性模型
//============================================= 线性模型


线性模型是自然界最简单的模型之一，
它描述了 一个（或多个）"自变量" 对另一个 "因变量" 的影响是呈简单的比例、线性关系.

如：
	（1）住房每 1   平米单价为 1 万元，
		 住房每 100 平米价格为 100 万元 ，
		 住房每 120 平米价格为 120 万元 ，
			y = 10000 * x
			//y 就是因变量
			//x 就是自变量

	（2）一台挖掘机每小时挖 100m3 沙土
		 工作4小时可以挖掘400m3沙土。
			y = 100 * x
	线性模型在 "二维空间" 表现为一条直线，
	在 "三维空间内" 表现为一个 "平面"，
	更高维度下的 "线性模型" 很难用几何图形表示（称为 "超平面" ）


//============================================= 线性模型 完整的定义
//============================================= 线性模型 完整的定义
		（1）y = w1x1 + w2x2 + w3x3 + ... + wnxn + b
					//x是自变量
					//y是因变量
					// w 是权重，每个 自变量 都有一个权重，权重越高，影响越大。 

					// 当自变量只有一个的时候，
					//		公式就变成了 y = w1x1 + b
					//		w1 也就是k，y = kx + b

					// 自变量可以有一个，也可以有多个
					// 但是自变量的 "最高次幂" 只有是1 ，就是最高是x的1次方
					// 如果是2，如x的2次方，这条线就不是直线了
		（2） 写成向量的形式， y= x*wT +b	///X乘以W的T次方  + b
				/**
					w转字乘以x  加B。
					这个和上面的公式表达内容相同 
					用矩阵 相乘 便可以证明
					列 乘以 行
				*/
			//=========================== w 和 b
			//=========================== w 和 b
			模型经过不断学习之后，模型就可以确定 w 和 b当前取值多少，
			就可以确定模型了。
			
			y = wx + b 


//=============================================
//=============================================
线性模型，形式简单、易于建模，却蕴含着 "机器学习" 一些重要的基本思想。

许多功能强大的 "非线性模型" 可以在 "线性模型基础" 上引入 "层级结构或高维映射" 而得

		//其它模型是通过线性模型演变而来的
//========================
//========================
此外，由于 w直观表达了各个属性在预测中的重要性，因此
线性模型具有很好的"可解释性"，例如：判断一个西瓜是不咪好瓜
可以使用以下表达式来判断：
			f好瓜(x) =0.2x色泽 + 0.5x根蒂 + 0.3x敲声 + 1
			
			上述公式可以解释为，一个西瓜是否为好瓜，
						可以通过色泽、根蒂、敲声等因素共同判断，
						基中根蒂最高，其次是敲声和色泽





//============================================= 线性回归
//============================================= 线性回归

我们要把 "数据" 带到 "线性模型" 里面去，找到k和b 的值的过程，就是 "线性回归"的过程

		"回归"： 在有监督的基础之上得到连续输出 

		"线性回归" 是要根据 一组 "输入值和输出值" ，
		寻找一个线性模型:
			能 "最佳程度"上 "拟合" 于 "给定的数值" 分布，
			从而再 "给定新的输入时" 预测输出，样本发吓表所示：

			/**
				什么叫 "拟合"，假设我有一组数据，
				我想用一个 "线性模型" 来表达这组数据，
				这个过程就叫 "拟合"
			*/

		//========================== 如下图：
		//========================== 如下图：
		//首先有这样一组数据
		输入(x)			输出(y)
		0.5				5.0
		0.6				5.5
		0.8				6.0
		1.1				6.8
		1.4				6.8
		//然后用一个散点图，画出了这一组数据
		//然后用一个线性模型拟合这组数据
		//然后带入新的值，预测它的结果
		//========================================= 线性回归 要做的就是
		//========================================= 线性回归 要做的就是
		怎么去把这个模型给它找出来


//=============================================
//=============================================
（2）多项式回归
（3）线性回归模型
（4）模型保存与加载






