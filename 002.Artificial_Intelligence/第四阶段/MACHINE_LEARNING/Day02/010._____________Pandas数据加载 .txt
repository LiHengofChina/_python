

创建Serier、DataFrame都是对数据做一个辅助工作

而真正的数据是从文件中（加载）

//============================================= 人工智能领域的数据，一般都放在人文件当中
//============================================= 人工智能领域的数据，一般都放在人文件当中


//====================== Pandas 有一系列从文件中加载数据的方法
//====================== Pandas 有一系列从文件中加载数据的方法


CSV 	read_csv	//列与列之前用逗号分隔 
JSON
HTML				//数据必须放在html的table标签里面，table里面就比较好读，而ul、li则不好读取
...
...



//====================== 重点关注
//====================== 重点关注
	CSV、JSON 文件

//====================== 最常用的方法
//====================== 最常用的方法
read_csv() ，最常的，最简单的，
			//文本文件读取，只要是文本文件都能读取，、csv文件（逗号）、.dat文件（双冒号）
			/**
				它们可能分隔符号不同，但它们都是文本文件 
				read_csv可以指定分隔符号，
			*/
			//============ read_csv 参数（参数非常多，常用如下）
			//============ read_csv 参数（参数非常多，常用如下）

			filepath_or_buffer 		#文件路径
			sep						#列之前分隔符号，默认为 ','

			header					#默认将首行设为列名，header=None时应手动给出列名，不然，它会生成默认的列名
			names					#header=None时设置此字段 使用列表初始化列名，//相当于列级索引

			index_col				#将某一列作为行级索引，	//相当于行级索引，也就是数据库中的索引
									左路使用列表，则设置复合索引

			usecols					#选择读取文件中的某些列
									//选择读取哪些列，不读取哪些列

			skiprows				跳过多少行，
									如：跳过前5行，从第6行开始读
									如：跳过前100行，从第101行开始读

			encoding				编码，存的时候以什么"格式编码"，在读取的时候就以"什么格式"解码
									

