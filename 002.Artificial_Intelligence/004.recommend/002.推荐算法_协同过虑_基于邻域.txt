
//========================================== 分类
//========================================== 分类

	基于邻域又分类为：
			ucf
			icf ：计算物品的相似度

	//不管是基于用户，还是基于商品，都离不开 "相似度" 这个，
	//可以 "通过距离" 计算相似度，也可以通过 "相应的指标" 计算相似度。
//================== ICF
//================== ICF

	Item CF 是业界使用最广的算法，该算法给用户推荐那些
	和 "他们之前喜欢的物品" 相似的物品，
	//比如你购买过《mahout实战》而给你推荐《机器学习实战》。
	// "物品A" 和 "物品B" 具有 "很大的相似度" 是 "因为喜欢物品A的用户" 大都也 "喜欢物品B"



（1）ICF，你买了哪个商品，找到与商品最相似的商品
		计算物品与物品之间的相似度
（2）根据物品的相似度和用户的历史行为给用户生成推荐列表。
		
		





//================== UCF
//================== UCF
	基于用户的协同过滤算法（user-based collaboratlve filtering）
	...


//========================================== 计算指标
//========================================== 计算指标

（1） 欧式距离 取倒数。
		欧式距离：越大越不相似，越小越相似，

			所以使用 1/(d+1)，取欧式距离的倒数，
					//必须+1，因为分母不能为0

		"欧式距离的倒数"越小越不相似
		"欧式距离的倒数"越大越相似

		越接近1，越相似，1/(d+1) 会处在 0~1 之间。
		越接近0，越不相似

（2） 皮尔逊相关系数。
			//计算用户 与 用户的相似度 或
			//计算商品 与 商品的相似度
	cov(x,y)/x标准差*y的标准差
			//cov 代表 协方差
		判断两组数据的相关性
		正相反，代表它们相似
		负相反，代表它们不相似
	它的结果是 -1 到 1 之间的值

	越接近于  1 ，代表它们越正相关
	越接近于 -1 ，代表它们越反相关
	为0时，两组数据不相关。
	//=========（1）协方差
	协方差：两组  "数据的离差" 对应相乘，就是协方差。
			//协方差: 只能计算相关性，不能计算相关程序。

	//=========（2）皮尔逊相关系数
	协方差 / 标准差的乘积
			//分母是上限值

	//=========在推荐算法中，
	只要去找相似的就可以了

	//=========取值说明 :
	0.8-1.0 极强相关
	0.6-0.8 强相关
	0.4-0.6 中等程度相关
	0.2-0.4 弱相关
	0.0-0.2 极弱相关


（3）计算物品之间的相似度

	购买 i_j 物品的相似度数量，

	"同时购买了i和j物品的数量" / 购买i的人数量 * 购买j的数量 数量再开方

	//==================
	用户A对物品a、b、d有过行为，
	用户B对物品b、c、e有过行为。
	依次构建用户——物品倒排表：物品a被用户A 、e有过行为，等等。

	//================== 目的：
	建立物品的共线矩阵：//每个商品和商品之间共同出现的次数
	a和b共同出现几次
	a和c共同出现几次
	a和d共同出现几次

	//记录两个物品被用户同时喜欢的用户数

	//共线矩阵 是相似度计算的分子。


	//========================================计算相似度：
	欧式距离
	皮尔逊相似度
	Tanimoto相似度//交并比





