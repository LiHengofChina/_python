

//=========================== DataFrame 数据访问
//=========================== DataFrame 数据访问


DataFrame 数据访问 有点类似于Mysql，
而redis就是存在缓存中的
只不过mysql数据存放在磁盘上面


DataFrame 可以理解为内存当中的MySql


//====================================== 增、删、改、查
//====================================== 增、删、改、查

（1）可以从列级进行：//只有标签索引，没有位置索引
					增加一列，
					删除一列，修改、

					查询
						可以索引，但不能切片，
						索引拿到一维数据



	 也可以从行级进行。//即有标签索引，又有位置索引
					增加一行
					   //相当于从垂直方向合并两个数组

					删除一行
					修改
					查询
						可以切片，但不能直接索引，
						切片拿到二维数据


//====================================== 不方便
//====================================== 不方便

列：只能索引，不能切片
行：不能（直接）索引，只能切片

	于是出现了loc和iloc

	loc 操作标签索引的

	iloc操作位置索引的


对于 DataFrame 加上loc和iloc，就可以把它当成二维数组去操作
	df.loc['标签索引']
	df.iloc['位置索引']

	所以通过loc和iloc它就具备了二维数组的语法，如下：
	df.loc[行，列]
	df.loc[行，列]


	所以它即可以索引、切片、也可以掩码


	loc只能写标签索引，
	iloc才能写位置索引



//====================================== 增加行
//====================================== 增加行

	numpy 里面的 concatenate
	在pandas里面是叫 concat，concat非常强大

# 增加行：相当于在垂直方向合并
# numpy   里面的 np.concatenate() 在pandas里面是叫concat
# np.concat() #增加行，相当于垂直方向上面合并
# 

	除了concat，还有merge、join


	mysql，从一张表查询里面查询数据比较简单，
	如果从2、3张表里面查询数据，4张表呢，19张表等等
	这些是从 “数据分析”，取数据，分析数据
	我们一般 "人工智能" 不需要这样做

	在pandas里面：透视表、交叉表、多表连查、内连接、外连接都会有
	这些是数据分析才会使用的

	人工智能只需要学习pandas里面的操作数据，增删改查就行


//=====================
将一个 DataFrame 追加到另一个 DataFrame上面，从尾部追加，就相当于是新增加行

append



