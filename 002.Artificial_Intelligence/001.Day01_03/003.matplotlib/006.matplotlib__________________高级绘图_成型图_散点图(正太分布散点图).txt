成型图
//================================================  
//================================================ 

（1）散点图 03_figure.py
		把 “一个样本” 做成点画在 图当中。
		散点图，可以查看整体的分布状态。

		为什么要查看 “整体的分布状态”

			/**
				要 “根据一组数据” 构建模型，

				人工智能要赋予机器一个学习能力
				机器是针对什么进行学习的？
						机器 是 "针对模型" 进行学习的

				"不数据的分布状态" 就要选择 "不同的模型"

				通过 "散点图" 画出来之后，
				可以看出，整体的 数据是呈 "线性分布" 的

				所以我的模型就可以选择 “Y = KX +B” 直线方程，
				它也就是模型

				数据就是散点图中的中的内容

				那我们再 "把数据" 带到 "模型当中" 学习
				k为多少，b为多少的时候，
				这条直线才能在最好的状态上，
				去 "表达我们" 当前 "这组样本" 数据


				所以如果我们和知道  数据的 整体分布状态，
				我们 “选择模型” 会 “更加方便”

			*/

			/**
				并不是 “所有的数据” 都可以画出它的  “分布状态的”

				比如：我的数据一个样本，有非常多的特征，
					   这时就很难决定，谁是x，谁是y

				//======================== 场景
				所以散点图一般都 是针对简单的，一个X一个Y的情况

			*/
		//======================================
		//======================================
		plt.scatter	（斯k特）

//================================================ 练习
//================================================ 练习
		numpy.random提供了normal函数用于产生符合 "正太分布的" 的随机数
		n = 100

		# 172: 期望值 :  均值
		# 10:  标准差 :  震荡幅度
		# n:   数字生成数量

		x = np.random.normal(172,10,n)
		y = np.random.normal(60,10,n)

		生成一组，期望值为172，标准差为10的符合正太分布的样本
		142 - 202
			//97%的概念分落在 这个范围之内

		//===================== 另外：让身高值随颜色变化
		//===================== 另外：让身高值随颜色变化

		（1）color='read', //使用color则需要指定颜色
		（2）c=height, 	   //值为列表，则必须使用c
						   //此时，还可以添加颜色条 plt.colorbar()
						   //此时，还可以都进颜色映射





 

