


double distance = length(trainingSamples[i] - normalized_feature_sample); 

给定两个向量 trainingSamples[i] 和 normalized_feature_sample，
它们之间的差值是另一个向量。当你使用 length() 函数时，
你可能实际上是 "计算这个差异向量" 的 "欧几里得范数（L2范数）"，
它表示这两个向量之间的欧几里得距离。

//===================================================
//===================================================

对于两个向量：

v = [a, b, c]
w = [x, y, z]

//对于两个向量：
diff = [a-x, b-y, c-z]

//它们之间的差值是：
diff = [a-x, b-y, c-z]

//=================================================== 求 欧几里得距离
//=================================================== 求 欧几里得距离

这个差异向量 diff 的欧几里得范数（或欧几里得距离）计算为：

length(diff) = sqrt((a-x)^2 + (b-y)^2 + (c-z)^2)
这就是为什么 distance 是一个标量值：它表示两个向量之间的距离。
在机器学习和数据分析中，
这种距离度量常用于评估两个数据点的 "相似性" 或 "差异性"。


//===================================================  区别
//===================================================  区别

//========== 欧几里得距离：
//========== 欧几里得距离：
 
欧几里得距离： 对于两个向量 a 和 b 
		它们之间的 "欧几里得距离" 是 "这两个向量的差" 的L2范数
		//意思是：先求差，再求L2范数
		
//========== L2范数
//========== L2范数
		
L2范数  = sqrt((d)^2 + (e)^2 + (f)^2)
		//特征值的平方和  ，再开方

//========== L2范数归一化
//========== L2范数归一化
		
L2范数归一化值  =  x / sqrt((d)^2 + (e)^2 + (f)^2)


		